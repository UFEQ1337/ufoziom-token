{
	"id": "87b82f62d302a25ec07b91d7a0157d31",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"UfoZiomToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// Import OpenZeppelin libraries\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\";\r\n\r\n\r\n/**\r\n * @title UfoZiom Token\r\n * @dev UfoZiom Token is an ERC20 token with a transaction fee for burning.\r\n */\r\ncontract UfoZiomToken is ERC20, Ownable {\r\n    // Address where burnt tokens are sent (dead address)\r\n    address public constant burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    // Transaction fee in percentage (e.g., 2 means 2%)\r\n    uint256 public taxFee = 2;\r\n\r\n    // Mapping of addresses excluded from fees (e.g., owner, exchanges)\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n\r\n    /**\r\n     * @dev Constructor that gives msg.sender all of existing tokens and excludes owner from fee.\r\n     */\r\n    constructor() ERC20(\"UfoZiom Token\", \"UFO\") {\r\n        // Mint total supply to contract deployer\r\n        _mint(msg.sender, 1_000_000_000_000 * 10 ** decimals());\r\n\r\n        // Exclude owner from fees\r\n        _isExcludedFromFee[msg.sender] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Exclude an account from transaction fees.\r\n     * Can only be called by the owner.\r\n     * @param account The address to exclude.\r\n     */\r\n    function excludeFromFee(address account) external onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Include an account in transaction fees.\r\n     * Can only be called by the owner.\r\n     * @param account The address to include.\r\n     */\r\n    function includeInFee(address account) external onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Set the transaction fee percentage.\r\n     * Can only be called by the owner.\r\n     * @param fee The new fee percentage.\r\n     */\r\n    function setTaxFeePercent(uint256 fee) external onlyOwner {\r\n        require(fee >= 0 && fee <= 10, \"Fee must be between 0% and 10%\");\r\n        taxFee = fee;\r\n    }\r\n\r\n    /**\r\n     * @dev Overrides the default ERC20 _transfer function to implement transaction fee.\r\n     * @param sender The address transferring tokens.\r\n     * @param recipient The address receiving tokens.\r\n     * @param amount The amount of tokens being transferred.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal override {\r\n        if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {\r\n            // If either sender or recipient is excluded from fee, transfer tokens without fee\r\n            super._transfer(sender, recipient, amount);\r\n        } else {\r\n            // Calculate the fee amount\r\n            uint256 feeAmount = amount * taxFee / 100;\r\n            uint256 amountAfterFee = amount - feeAmount;\r\n\r\n            // Burn the fee amount\r\n            super._transfer(sender, burnAddress, feeAmount);\r\n\r\n            // Transfer the remaining amount to the recipient\r\n            super._transfer(sender, recipient, amountAfterFee);\r\n        }\r\n    }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"UfoZiomToken.sol": {
				"UfoZiomToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "setTaxFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "UfoZiom Token is an ERC20 token with a transaction fee for burning.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor that gives msg.sender all of existing tokens and excludes owner from fee."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"excludeFromFee(address)": {
								"details": "Exclude an account from transaction fees. Can only be called by the owner.",
								"params": {
									"account": "The address to exclude."
								}
							},
							"includeInFee(address)": {
								"details": "Include an account in transaction fees. Can only be called by the owner.",
								"params": {
									"account": "The address to include."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setTaxFeePercent(uint256)": {
								"details": "Set the transaction fee percentage. Can only be called by the owner.",
								"params": {
									"fee": "The new fee percentage."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "UfoZiom Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UfoZiomToken.sol\":427:3132  contract UfoZiomToken is ERC20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"UfoZiomToken.sol\":703:704  2 */\n  0x02\n    /* \"UfoZiomToken.sol\":679:704  uint256 public taxFee = 2 */\n  0x06\n  sstore\n    /* \"UfoZiomToken.sol\":963:1218  constructor() ERC20(\"UfoZiom Token\", \"UFO\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x99, 0x2ab337ad34b7b6902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x55464f)\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_11\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_12)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_13\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"UfoZiomToken.sol\":1069:1124  _mint(msg.sender, 1_000_000_000_000 * 10 ** decimals()) */\n  tag_15\n    /* \"UfoZiomToken.sol\":1075:1085  msg.sender */\n  caller\n    /* \"UfoZiomToken.sol\":1113:1123  decimals() */\n  tag_16\n    /* \"UfoZiomToken.sol\":1113:1121  decimals */\n  tag_17\n    /* \"UfoZiomToken.sol\":1113:1123  decimals() */\n  jump\t// in\ntag_16:\n    /* \"UfoZiomToken.sol\":1107:1123  10 ** decimals() */\n  tag_18\n  swap1\n    /* \"UfoZiomToken.sol\":1107:1109  10 */\n  0x0a\n    /* \"UfoZiomToken.sol\":1107:1123  10 ** decimals() */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"UfoZiomToken.sol\":1087:1123  1_000_000_000_000 * 10 ** decimals() */\n  tag_20\n  swap1\n    /* \"UfoZiomToken.sol\":1087:1104  1_000_000_000_000 */\n  0xe8d4a51000\n    /* \"UfoZiomToken.sol\":1087:1123  1_000_000_000_000 * 10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"UfoZiomToken.sol\":1069:1074  _mint */\n  tag_22\n    /* \"UfoZiomToken.sol\":1069:1124  _mint(msg.sender, 1_000_000_000_000 * 10 ** decimals()) */\n  jump\t// in\ntag_15:\n    /* \"UfoZiomToken.sol\":1192:1202  msg.sender */\n  caller\n    /* \"UfoZiomToken.sol\":1173:1203  _isExcludedFromFee[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"UfoZiomToken.sol\":1173:1191  _isExcludedFromFee */\n  0x07\n    /* \"UfoZiomToken.sol\":1173:1203  _isExcludedFromFee[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"UfoZiomToken.sol\":1173:1210  _isExcludedFromFee[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"UfoZiomToken.sol\":1206:1210  true */\n  0x01\n    /* \"UfoZiomToken.sol\":1173:1210  _isExcludedFromFee[msg.sender] = true */\n  or\n  swap1\n  sstore\n    /* \"UfoZiomToken.sol\":427:3132  contract UfoZiomToken is ERC20, Ownable {\r... */\n  jump(tag_53)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8415:8804  function _mint(address account, uint256 amount) internal virtual {... */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8498:8519  account != address(0) */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8566:8615  _beforeTokenTransfer(address(0), account, amount) */\n  tag_31\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8595:8596  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8599:8606  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8608:8614  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8566:8586  _beforeTokenTransfer */\n  tag_32\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8566:8615  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_31:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8642:8648  amount */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8626:8638  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8626:8648  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8676  _balances[account] */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8667  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8676  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n  dup1\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8680:8686  amount */\n  dup4\n  swap3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8667  _balances */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n  tag_35\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8680:8686  amount */\n  dup5\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n  tag_34\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8718:8719  0 */\n  0x00\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n  tag_36\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8731:8737  amount */\n  dup6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8749:8797  _afterTokenTransfer(address(0), account, amount) */\n  tag_38\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8777:8778  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8781:8788  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8790:8796  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8749:8768  _afterTokenTransfer */\n  tag_32\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8749:8797  _afterTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_38:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8415:8804  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\ntag_32:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"UfoZiomToken.sol\":427:3132  contract UfoZiomToken is ERC20, Ownable {\r... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_42\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_45\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_48)\ntag_45:\n  dup3\n  0x1f\n  lt\n  tag_46\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_48)\ntag_46:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_48\n  jumpi\n  swap2\n  dup3\n  add\ntag_47:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_48\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_47)\ntag_48:\n  pop\n  tag_49\n  swap3\n  swap2\n  pop\n  tag_50\n  jump\t// in\ntag_49:\n  pop\n  swap1\n  jump\t// out\ntag_50:\ntag_51:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_49\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_51)\n    /* \"#utility.yul\":14:369   */\ntag_30:\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"#utility.yul\":198:219   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":289:291   */\n  0x40\n    /* \"#utility.yul\":274:292   */\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":360:362   */\n  0x60\n    /* \"#utility.yul\":345:363   */\n  add\n  swap1\n    /* \"#utility.yul\":188:369   */\n  jump\t// out\n    /* \"#utility.yul\":374:551   */\ntag_37:\n    /* \"#utility.yul\":520:545   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n  swap1\n    /* \"#utility.yul\":475:551   */\n  jump\t// out\n    /* \"#utility.yul\":556:684   */\ntag_34:\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:616   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":633:651   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n  pop\n    /* \"#utility.yul\":669:678   */\n  add\n  swap1\n    /* \"#utility.yul\":604:684   */\n  jump\t// out\n    /* \"#utility.yul\":689:1142   */\ntag_60:\n    /* \"#utility.yul\":785:791   */\n  dup1\n    /* \"#utility.yul\":808:813   */\n  dup3\n    /* \"#utility.yul\":822:1136   */\ntag_62:\n    /* \"#utility.yul\":871:872   */\n  0x01\n    /* \"#utility.yul\":908:910   */\n  dup1\n    /* \"#utility.yul\":898:906   */\n  dup7\n    /* \"#utility.yul\":895:911   */\n  gt\n    /* \"#utility.yul\":885:887   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":915:920   */\n  pop\n  jump(tag_64)\n    /* \"#utility.yul\":885:887   */\ntag_65:\n    /* \"#utility.yul\":956:960   */\n  dup2\n    /* \"#utility.yul\":951:954   */\n  dup8\n    /* \"#utility.yul\":947:961   */\n  div\n    /* \"#utility.yul\":941:945   */\n  dup3\n    /* \"#utility.yul\":938:962   */\n  gt\n    /* \"#utility.yul\":935:937   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":965:983   */\n  tag_67\n  tag_59\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1015:1017   */\n  dup1\n    /* \"#utility.yul\":1005:1013   */\n  dup7\n    /* \"#utility.yul\":1001:1018   */\n  and\n    /* \"#utility.yul\":998:1000   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1030:1046   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":998:1000   */\ntag_68:\n    /* \"#utility.yul\":1109:1126   */\n  swap5\n  swap1\n  swap5\n  shr\n  swap4\n    /* \"#utility.yul\":1069:1084   */\n  dup1\n  mul\n    /* \"#utility.yul\":822:1136   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":766:1142   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1147:1295   */\ntag_19:\n  0x00\n    /* \"#utility.yul\":1234:1289   */\n  tag_70\n  not(0x00)\n    /* \"#utility.yul\":1275:1279   */\n  0xff\n    /* \"#utility.yul\":1261:1280   */\n  dup6\n  and\n    /* \"#utility.yul\":1255:1259   */\n  dup5\n    /* \"#utility.yul\":1234:1289   */\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1225:1289   */\n  swap4\n    /* \"#utility.yul\":1215:1295   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1300:2222   */\ntag_71:\n  0x00\n    /* \"#utility.yul\":1384:1392   */\n  dup3\n    /* \"#utility.yul\":1374:1376   */\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":1425:1426   */\n  0x01\n    /* \"#utility.yul\":1439:1444   */\n  jump(tag_70)\n    /* \"#utility.yul\":1374:1376   */\ntag_73:\n    /* \"#utility.yul\":1473:1477   */\n  dup2\n    /* \"#utility.yul\":1463:1465   */\n  tag_74\n  jumpi\n  pop\n    /* \"#utility.yul\":1510:1511   */\n  0x00\n    /* \"#utility.yul\":1524:1529   */\n  jump(tag_70)\n    /* \"#utility.yul\":1463:1465   */\ntag_74:\n    /* \"#utility.yul\":1555:1559   */\n  dup2\n    /* \"#utility.yul\":1573:1574   */\n  0x01\n    /* \"#utility.yul\":1568:1627   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1641:1642   */\n  0x02\n    /* \"#utility.yul\":1636:1819   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1548:1819   */\n  jump(tag_75)\n    /* \"#utility.yul\":1568:1627   */\ntag_76:\n    /* \"#utility.yul\":1598:1599   */\n  0x01\n    /* \"#utility.yul\":1589:1599   */\n  swap2\n  pop\n    /* \"#utility.yul\":1612:1617   */\n  pop\n  jump(tag_70)\n    /* \"#utility.yul\":1636:1819   */\ntag_77:\n    /* \"#utility.yul\":1673:1676   */\n  0xff\n    /* \"#utility.yul\":1663:1671   */\n  dup5\n    /* \"#utility.yul\":1660:1677   */\n  gt\n    /* \"#utility.yul\":1657:1659   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1680:1698   */\n  tag_79\n  tag_59\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1736:1737   */\n  0x01\n    /* \"#utility.yul\":1726:1734   */\n  dup5\n    /* \"#utility.yul\":1722:1738   */\n  shl\n    /* \"#utility.yul\":1713:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1764:1767   */\n  dup5\n    /* \"#utility.yul\":1757:1762   */\n  dup3\n    /* \"#utility.yul\":1754:1768   */\n  gt\n    /* \"#utility.yul\":1751:1753   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1771:1789   */\n  tag_81\n  tag_59\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1804:1809   */\n  pop\n  jump(tag_70)\n    /* \"#utility.yul\":1548:1819   */\ntag_75:\n  pop\n    /* \"#utility.yul\":1903:1905   */\n  0x20\n    /* \"#utility.yul\":1893:1901   */\n  dup4\n    /* \"#utility.yul\":1890:1906   */\n  lt\n    /* \"#utility.yul\":1884:1887   */\n  0x0133\n    /* \"#utility.yul\":1878:1882   */\n  dup4\n    /* \"#utility.yul\":1875:1888   */\n  lt\n    /* \"#utility.yul\":1871:1907   */\n  and\n    /* \"#utility.yul\":1865:1867   */\n  0x4e\n    /* \"#utility.yul\":1855:1863   */\n  dup5\n    /* \"#utility.yul\":1852:1868   */\n  lt\n    /* \"#utility.yul\":1847:1849   */\n  0x0b\n    /* \"#utility.yul\":1841:1845   */\n  dup5\n    /* \"#utility.yul\":1838:1850   */\n  lt\n    /* \"#utility.yul\":1834:1869   */\n  and\n    /* \"#utility.yul\":1831:1908   */\n  or\n    /* \"#utility.yul\":1828:1830   */\n  iszero\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":1940:1959   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1975:1989   */\n  dup4\n  dup2\n  gt\n    /* \"#utility.yul\":1972:1974   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":1992:2010   */\n  tag_84\n  tag_59\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2025:2030   */\n  jump(tag_70)\n    /* \"#utility.yul\":1828:1830   */\ntag_82:\n    /* \"#utility.yul\":2072:2114   */\n  tag_85\n    /* \"#utility.yul\":2110:2113   */\n  dup5\n    /* \"#utility.yul\":2100:2108   */\n  dup5\n    /* \"#utility.yul\":2094:2098   */\n  dup5\n    /* \"#utility.yul\":2091:2092   */\n  0x01\n    /* \"#utility.yul\":2072:2114   */\n  tag_60\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2147:2153   */\n  dup1\n    /* \"#utility.yul\":2142:2145   */\n  dup7\n    /* \"#utility.yul\":2138:2154   */\n  div\n    /* \"#utility.yul\":2129:2136   */\n  dup3\n    /* \"#utility.yul\":2126:2155   */\n  gt\n    /* \"#utility.yul\":2123:2125   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2158:2176   */\n  tag_87\n  tag_59\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2196:2216   */\n  mul\n  swap5\n    /* \"#utility.yul\":1364:2222   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2227:2395   */\ntag_21:\n  0x00\n    /* \"#utility.yul\":2333:2334   */\n  dup2\n    /* \"#utility.yul\":2329:2330   */\n  0x00\n    /* \"#utility.yul\":2325:2331   */\n  not\n    /* \"#utility.yul\":2321:2335   */\n  div\n    /* \"#utility.yul\":2318:2319   */\n  dup4\n    /* \"#utility.yul\":2315:2336   */\n  gt\n    /* \"#utility.yul\":2310:2311   */\n  dup3\n    /* \"#utility.yul\":2303:2312   */\n  iszero\n    /* \"#utility.yul\":2296:2313   */\n  iszero\n    /* \"#utility.yul\":2292:2337   */\n  and\n    /* \"#utility.yul\":2289:2291   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2340:2358   */\n  tag_90\n  tag_59\n  jump\t// in\ntag_90:\n  pop\n    /* \"#utility.yul\":2380:2389   */\n  mul\n  swap1\n    /* \"#utility.yul\":2279:2395   */\n  jump\t// out\n    /* \"#utility.yul\":2400:2780   */\ntag_43:\n    /* \"#utility.yul\":2485:2486   */\n  0x02\n    /* \"#utility.yul\":2475:2487   */\n  dup2\n  div\n    /* \"#utility.yul\":2532:2533   */\n  0x01\n    /* \"#utility.yul\":2522:2534   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2543:2545   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2597:2601   */\n  0x7f\n    /* \"#utility.yul\":2589:2595   */\n  dup3\n    /* \"#utility.yul\":2585:2602   */\n  and\n    /* \"#utility.yul\":2575:2602   */\n  swap2\n  pop\n    /* \"#utility.yul\":2543:2545   */\ntag_92:\n    /* \"#utility.yul\":2650:2652   */\n  0x20\n    /* \"#utility.yul\":2642:2648   */\n  dup3\n    /* \"#utility.yul\":2639:2653   */\n  lt\n    /* \"#utility.yul\":2619:2637   */\n  dup2\n    /* \"#utility.yul\":2616:2654   */\n  eq\n    /* \"#utility.yul\":2613:2615   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2696:2706   */\n  0x4e487b71\n    /* \"#utility.yul\":2691:2694   */\n  0xe0\n    /* \"#utility.yul\":2687:2707   */\n  shl\n    /* \"#utility.yul\":2684:2685   */\n  0x00\n    /* \"#utility.yul\":2677:2708   */\n  mstore\n    /* \"#utility.yul\":2731:2735   */\n  0x22\n    /* \"#utility.yul\":2728:2729   */\n  0x04\n    /* \"#utility.yul\":2721:2736   */\n  mstore\n    /* \"#utility.yul\":2759:2763   */\n  0x24\n    /* \"#utility.yul\":2756:2757   */\n  0x00\n    /* \"#utility.yul\":2749:2764   */\n  revert\n    /* \"#utility.yul\":2613:2615   */\ntag_93:\n  pop\n    /* \"#utility.yul\":2455:2780   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2785:2912   */\ntag_59:\n    /* \"#utility.yul\":2846:2856   */\n  0x4e487b71\n    /* \"#utility.yul\":2841:2844   */\n  0xe0\n    /* \"#utility.yul\":2837:2857   */\n  shl\n    /* \"#utility.yul\":2834:2835   */\n  0x00\n    /* \"#utility.yul\":2827:2858   */\n  mstore\n    /* \"#utility.yul\":2877:2881   */\n  0x11\n    /* \"#utility.yul\":2874:2875   */\n  0x04\n    /* \"#utility.yul\":2867:2882   */\n  mstore\n    /* \"#utility.yul\":2901:2905   */\n  0x24\n    /* \"#utility.yul\":2898:2899   */\n  0x00\n    /* \"#utility.yul\":2891:2906   */\n  revert\n    /* \"#utility.yul\":2817:2912   */\ntag_53:\n    /* \"UfoZiomToken.sol\":427:3132  contract UfoZiomToken is ERC20, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"UfoZiomToken.sol\":427:3132  contract UfoZiomToken is ERC20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70d5ae05\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70d5ae05\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa071dcf4\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x061c82d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"UfoZiomToken.sol\":1938:2102  function setTaxFeePercent(uint256 fee) external onlyOwner {\r... */\n    tag_3:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_7:\n      tag_33\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_33\n      tag_53\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"UfoZiomToken.sol\":1387:1500  function excludeFromFee(address account) external onlyOwner {\r... */\n    tag_10:\n      tag_25\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_39\n      tag_61\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"UfoZiomToken.sol\":533:613  address public constant burnAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_25\n      tag_69\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_64\n      tag_71\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_29\n      tag_74\n      jump\t// in\n        /* \"UfoZiomToken.sol\":679:704  uint256 public taxFee = 2 */\n    tag_16:\n      tag_39\n      tag_77\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_17:\n      tag_33\n      tag_80\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_18:\n      tag_33\n      tag_84\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_19:\n      tag_39\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"UfoZiomToken.sol\":1667:1779  function includeInFee(address account) external onlyOwner {\r... */\n    tag_20:\n      tag_25\n      tag_93\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_25\n      tag_96\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"UfoZiomToken.sol\":1938:2102  function setTaxFeePercent(uint256 fee) external onlyOwner {\r... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"UfoZiomToken.sol\":2034:2036  10 */\n      0x0a\n        /* \"UfoZiomToken.sol\":2027:2030  fee */\n      dup2\n        /* \"UfoZiomToken.sol\":2027:2036  fee <= 10 */\n      gt\n      iszero\n        /* \"UfoZiomToken.sol\":2007:2071  require(fee >= 0 && fee <= 10, \"Fee must be between 0% and 10%\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_109\n      jump\t// in\n    tag_107:\n        /* \"UfoZiomToken.sol\":2082:2088  taxFee */\n      0x06\n        /* \"UfoZiomToken.sol\":2082:2094  taxFee = fee */\n      sstore\n        /* \"UfoZiomToken.sol\":1938:2102  function setTaxFeePercent(uint256 fee) external onlyOwner {\r... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4532:4545  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4548:4560  _msgSender() */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4548:4558  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4548:4560  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4532:4560  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4579:4584  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_119:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5335:5350  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5353:5365  _msgSender() */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5353:5363  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5353:5365  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5335:5365  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5397:5404  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_125\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_126\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_126:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5977:5990  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5993:6005  _msgSender() */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5993:6003  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5993:6005  _msgSender() */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6051  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6067  _allowances[owner][spender] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5977:6005  address owner = _msgSender() */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_119\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5977:6005  address owner = _msgSender() */\n      dup3\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_132\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6070:6080  addedValue */\n      dup8\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"UfoZiomToken.sol\":1387:1500  function excludeFromFee(address account) external onlyOwner {\r... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"UfoZiomToken.sol\":1458:1485  _isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"UfoZiomToken.sol\":1458:1476  _isExcludedFromFee */\n      0x07\n        /* \"UfoZiomToken.sol\":1458:1485  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"UfoZiomToken.sol\":1458:1492  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"UfoZiomToken.sol\":1488:1492  true */\n      0x01\n        /* \"UfoZiomToken.sol\":1458:1492  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"UfoZiomToken.sol\":1387:1500  function excludeFromFee(address account) external onlyOwner {\r... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_140:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"UfoZiomToken.sol\":533:613  address public constant burnAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_65:\n        /* \"UfoZiomToken.sol\":571:613  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"UfoZiomToken.sol\":533:613  address public constant burnAddress = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_147\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_148\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_147:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n        /* \"UfoZiomToken.sol\":679:704  uint256 public taxFee = 2 */\n    tag_77:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6689:6693  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6705:6718  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6721:6733  _msgSender() */\n      tag_157\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6721:6731  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6721:6733  _msgSender() */\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      dup1\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6743:6767  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6781  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6797  _allowances[owner][spender] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6705:6733  address owner = _msgSender() */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6815:6850  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_160\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_126\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6935:6940  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6942:6949  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6970:6985  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6951:6967  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6951:6985  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6926:6934  _approve */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3824:3837  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3840:3852  _msgSender() */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3840:3850  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3840:3852  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3824:3852  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3872:3877  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"UfoZiomToken.sol\":1667:1779  function includeInFee(address account) external onlyOwner {\r... */\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"UfoZiomToken.sol\":1736:1763  _isExcludedFromFee[account] */\n      and\n        /* \"UfoZiomToken.sol\":1766:1771  false */\n      0x00\n        /* \"UfoZiomToken.sol\":1736:1763  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"UfoZiomToken.sol\":1736:1754  _isExcludedFromFee */\n      0x07\n        /* \"UfoZiomToken.sol\":1736:1763  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"UfoZiomToken.sol\":1736:1771  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"UfoZiomToken.sol\":1667:1779  function includeInFee(address account) external onlyOwner {\r... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_173\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_180\n      jump\t// in\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_181\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_148\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10254:10273  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_186\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10332:10353  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10414  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10430  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10439  _allowances[owner][spender] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_190\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10433:10439  amount */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      tag_42\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10937:10942  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10944:10951  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10927:10936  allowance */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      jump\t// in\n    tag_192:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10900:10952  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10966:10982  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_196\n      jump\t// in\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_197\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"UfoZiomToken.sol\":2390:3129  function _transfer(address sender, address recipient, uint256 amount) internal override {\r... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"UfoZiomToken.sol\":2493:2519  _isExcludedFromFee[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"UfoZiomToken.sol\":2493:2511  _isExcludedFromFee */\n      0x07\n        /* \"UfoZiomToken.sol\":2493:2519  _isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"UfoZiomToken.sol\":2493:2552  _isExcludedFromFee[sender] || _isExcludedFromFee[recipient] */\n      tag_199\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"UfoZiomToken.sol\":2523:2552  _isExcludedFromFee[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"UfoZiomToken.sol\":2523:2541  _isExcludedFromFee */\n      0x07\n        /* \"UfoZiomToken.sol\":2523:2552  _isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"UfoZiomToken.sol\":2493:2552  _isExcludedFromFee[sender] || _isExcludedFromFee[recipient] */\n    tag_199:\n        /* \"UfoZiomToken.sol\":2489:3122  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {\r... */\n      iszero\n      tag_200\n      jumpi\n        /* \"UfoZiomToken.sol\":2665:2707  super._transfer(sender, recipient, amount) */\n      tag_201\n        /* \"UfoZiomToken.sol\":2681:2687  sender */\n      dup4\n        /* \"UfoZiomToken.sol\":2689:2698  recipient */\n      dup4\n        /* \"UfoZiomToken.sol\":2700:2706  amount */\n      dup4\n        /* \"UfoZiomToken.sol\":2665:2680  super._transfer */\n      tag_202\n        /* \"UfoZiomToken.sol\":2665:2707  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_201:\n        /* \"UfoZiomToken.sol\":2489:3122  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {\r... */\n      jump(tag_203)\n    tag_200:\n        /* \"UfoZiomToken.sol\":2781:2798  uint256 feeAmount */\n      0x00\n        /* \"UfoZiomToken.sol\":2819:2822  100 */\n      0x64\n        /* \"UfoZiomToken.sol\":2810:2816  taxFee */\n      sload(0x06)\n        /* \"UfoZiomToken.sol\":2801:2807  amount */\n      dup4\n        /* \"UfoZiomToken.sol\":2801:2816  amount * taxFee */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"UfoZiomToken.sol\":2801:2822  amount * taxFee / 100 */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"UfoZiomToken.sol\":2781:2822  uint256 feeAmount = amount * taxFee / 100 */\n      swap1\n      pop\n        /* \"UfoZiomToken.sol\":2837:2859  uint256 amountAfterFee */\n      0x00\n        /* \"UfoZiomToken.sol\":2862:2880  amount - feeAmount */\n      tag_208\n        /* \"UfoZiomToken.sol\":2781:2822  uint256 feeAmount = amount * taxFee / 100 */\n      dup3\n        /* \"UfoZiomToken.sol\":2862:2868  amount */\n      dup5\n        /* \"UfoZiomToken.sol\":2862:2880  amount - feeAmount */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"UfoZiomToken.sol\":2837:2880  uint256 amountAfterFee = amount - feeAmount */\n      swap1\n      pop\n        /* \"UfoZiomToken.sol\":2933:2980  super._transfer(sender, burnAddress, feeAmount) */\n      tag_210\n        /* \"UfoZiomToken.sol\":2949:2955  sender */\n      dup6\n        /* \"UfoZiomToken.sol\":571:613  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"UfoZiomToken.sol\":2970:2979  feeAmount */\n      dup5\n        /* \"UfoZiomToken.sol\":2933:2948  super._transfer */\n      tag_202\n        /* \"UfoZiomToken.sol\":2933:2980  super._transfer(sender, burnAddress, feeAmount) */\n      jump\t// in\n    tag_210:\n        /* \"UfoZiomToken.sol\":3060:3110  super._transfer(sender, recipient, amountAfterFee) */\n      tag_211\n        /* \"UfoZiomToken.sol\":3076:3082  sender */\n      dup6\n        /* \"UfoZiomToken.sol\":3084:3093  recipient */\n      dup6\n        /* \"UfoZiomToken.sol\":3095:3109  amountAfterFee */\n      dup4\n        /* \"UfoZiomToken.sol\":3060:3075  super._transfer */\n      tag_202\n        /* \"UfoZiomToken.sol\":3060:3110  super._transfer(sender, recipient, amountAfterFee) */\n      jump\t// in\n    tag_211:\n        /* \"UfoZiomToken.sol\":2489:3122  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {\r... */\n      pop\n      pop\n    tag_203:\n        /* \"UfoZiomToken.sol\":2390:3129  function _transfer(address sender, address recipient, uint256 amount) internal override {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7488:8139  function _transfer(... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7614:7632  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_216\n      jump\t// in\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7692:7708  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_219\n      jump\t// in\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7759:7797  _beforeTokenTransfer(from, to, amount) */\n      tag_220\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7780:7784  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7786:7788  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7790:7796  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7759:7779  _beforeTokenTransfer */\n      tag_203\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7759:7797  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7808:7827  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7863:7884  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_224\n      jump\t// in\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7979:7999  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7999  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8032  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_225\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_133\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8073:8075  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8067:8071  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8077:8083  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8095:8132  _afterTokenTransfer(from, to, amount) */\n      tag_197\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8115:8119  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8121:8123  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8125:8131  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8095:8114  _afterTokenTransfer */\n      tag_203\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8095:8132  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n        /* \"#utility.yul\":14:189   */\n    tag_232:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_236:\n        /* \"#utility.yul\":355:386   */\n      tag_237\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_232\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:671   */\n    tag_89:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_239:\n        /* \"#utility.yul\":575:606   */\n      tag_240\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_232\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_241\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_232\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:1018   */\n    tag_45:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":810:819   */\n      dup5\n        /* \"#utility.yul\":801:808   */\n      dup7\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":843:849   */\n      dup1\n        /* \"#utility.yul\":835:841   */\n      dup2\n        /* \"#utility.yul\":828:850   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_243:\n        /* \"#utility.yul\":871:902   */\n      tag_244\n        /* \"#utility.yul\":892:901   */\n      dup5\n        /* \"#utility.yul\":871:902   */\n      tag_232\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":861:902   */\n      swap3\n      pop\n        /* \"#utility.yul\":921:961   */\n      tag_245\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup6\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":921:961   */\n      tag_232\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":911:961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \"#utility.yul\":980:1012   */\n      calldataload\n        /* \"#utility.yul\":970:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1018   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1023:1289   */\n    tag_35:\n      0x00\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1122   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup2\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1120:1122   */\n    tag_247:\n        /* \"#utility.yul\":1201:1232   */\n      tag_248\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1201:1232   */\n      tag_232\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1191:1232   */\n      swap5\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1251:1283   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1110:1289   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1484   */\n    tag_27:\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1394:1403   */\n      dup3\n        /* \"#utility.yul\":1385:1392   */\n      dup5\n        /* \"#utility.yul\":1381:1404   */\n      sub\n        /* \"#utility.yul\":1377:1409   */\n      slt\n        /* \"#utility.yul\":1374:1376   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":1427:1433   */\n      dup1\n        /* \"#utility.yul\":1419:1425   */\n      dup2\n        /* \"#utility.yul\":1412:1434   */\n      revert\n        /* \"#utility.yul\":1374:1376   */\n    tag_250:\n      pop\n        /* \"#utility.yul\":1455:1478   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1364:1484   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1489:1692   */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1653:1685   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1635:1686   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1623:1625   */\n      0x20\n        /* \"#utility.yul\":1608:1626   */\n      add\n      swap1\n        /* \"#utility.yul\":1590:1692   */\n      jump\t// out\n        /* \"#utility.yul\":1697:1884   */\n    tag_38:\n        /* \"#utility.yul\":1862:1876   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1855:1877   */\n      iszero\n        /* \"#utility.yul\":1837:1878   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1825:1827   */\n      0x20\n        /* \"#utility.yul\":1810:1828   */\n      add\n      swap1\n        /* \"#utility.yul\":1792:1884   */\n      jump\t// out\n        /* \"#utility.yul\":1889:2492   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":2030:2032   */\n      0x20\n        /* \"#utility.yul\":2059:2061   */\n      dup1\n        /* \"#utility.yul\":2048:2057   */\n      dup4\n        /* \"#utility.yul\":2041:2062   */\n      mstore\n        /* \"#utility.yul\":2091:2097   */\n      dup4\n        /* \"#utility.yul\":2085:2098   */\n      mload\n        /* \"#utility.yul\":2134:2140   */\n      dup1\n        /* \"#utility.yul\":2129:2131   */\n      dup3\n        /* \"#utility.yul\":2118:2127   */\n      dup6\n        /* \"#utility.yul\":2114:2132   */\n      add\n        /* \"#utility.yul\":2107:2141   */\n      mstore\n        /* \"#utility.yul\":2159:2163   */\n      dup3\n        /* \"#utility.yul\":2172:2312   */\n    tag_254:\n        /* \"#utility.yul\":2186:2192   */\n      dup2\n        /* \"#utility.yul\":2183:2184   */\n      dup2\n        /* \"#utility.yul\":2180:2193   */\n      lt\n        /* \"#utility.yul\":2172:2312   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2281:2295   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2277:2300   */\n      dup4\n      add\n        /* \"#utility.yul\":2271:2301   */\n      mload\n        /* \"#utility.yul\":2247:2264   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2266:2268   */\n      0x40\n        /* \"#utility.yul\":2243:2269   */\n      add\n        /* \"#utility.yul\":2236:2302   */\n      mstore\n        /* \"#utility.yul\":2201:2211   */\n      dup3\n      add\n        /* \"#utility.yul\":2172:2312   */\n      jump(tag_254)\n    tag_256:\n        /* \"#utility.yul\":2330:2336   */\n      dup2\n        /* \"#utility.yul\":2327:2328   */\n      dup2\n        /* \"#utility.yul\":2324:2337   */\n      gt\n        /* \"#utility.yul\":2321:2323   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2400:2404   */\n      dup4\n        /* \"#utility.yul\":2395:2397   */\n      0x40\n        /* \"#utility.yul\":2386:2392   */\n      dup4\n        /* \"#utility.yul\":2375:2384   */\n      dup8\n        /* \"#utility.yul\":2371:2393   */\n      add\n        /* \"#utility.yul\":2367:2398   */\n      add\n        /* \"#utility.yul\":2360:2405   */\n      mstore\n        /* \"#utility.yul\":2321:2323   */\n    tag_257:\n      pop\n        /* \"#utility.yul\":2476:2478   */\n      0x1f\n        /* \"#utility.yul\":2455:2470   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2451:2480   */\n      and\n        /* \"#utility.yul\":2436:2481   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2483:2485   */\n      0x40\n        /* \"#utility.yul\":2432:2486   */\n      add\n      swap4\n        /* \"#utility.yul\":2010:2492   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2497:2896   */\n    tag_219:\n        /* \"#utility.yul\":2699:2701   */\n      0x20\n        /* \"#utility.yul\":2681:2702   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2738:2740   */\n      0x23\n        /* \"#utility.yul\":2718:2736   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2711:2741   */\n      mstore\n        /* \"#utility.yul\":2777:2811   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2772:2774   */\n      0x40\n        /* \"#utility.yul\":2757:2775   */\n      dup3\n      add\n        /* \"#utility.yul\":2750:2812   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2843:2845   */\n      0x60\n        /* \"#utility.yul\":2828:2846   */\n      dup3\n      add\n        /* \"#utility.yul\":2821:2854   */\n      mstore\n        /* \"#utility.yul\":2886:2889   */\n      0x80\n        /* \"#utility.yul\":2871:2890   */\n      add\n      swap1\n        /* \"#utility.yul\":2671:2896   */\n      jump\t// out\n        /* \"#utility.yul\":2901:3303   */\n    tag_180:\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3085:3106   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3142:3144   */\n      0x26\n        /* \"#utility.yul\":3122:3140   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3115:3145   */\n      mstore\n        /* \"#utility.yul\":3181:3215   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3176:3178   */\n      0x40\n        /* \"#utility.yul\":3161:3179   */\n      dup3\n      add\n        /* \"#utility.yul\":3154:3216   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3247:3249   */\n      0x60\n        /* \"#utility.yul\":3232:3250   */\n      dup3\n      add\n        /* \"#utility.yul\":3225:3261   */\n      mstore\n        /* \"#utility.yul\":3293:3296   */\n      0x80\n        /* \"#utility.yul\":3278:3297   */\n      add\n      swap1\n        /* \"#utility.yul\":3075:3303   */\n      jump\t// out\n        /* \"#utility.yul\":3308:3706   */\n    tag_189:\n        /* \"#utility.yul\":3510:3512   */\n      0x20\n        /* \"#utility.yul\":3492:3513   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3549:3551   */\n      0x22\n        /* \"#utility.yul\":3529:3547   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3522:3552   */\n      mstore\n        /* \"#utility.yul\":3588:3622   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3583:3585   */\n      0x40\n        /* \"#utility.yul\":3568:3586   */\n      dup3\n      add\n        /* \"#utility.yul\":3561:3623   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3654:3656   */\n      0x60\n        /* \"#utility.yul\":3639:3657   */\n      dup3\n      add\n        /* \"#utility.yul\":3632:3664   */\n      mstore\n        /* \"#utility.yul\":3696:3699   */\n      0x80\n        /* \"#utility.yul\":3681:3700   */\n      add\n      swap1\n        /* \"#utility.yul\":3482:3706   */\n      jump\t// out\n        /* \"#utility.yul\":3711:4064   */\n    tag_196:\n        /* \"#utility.yul\":3913:3915   */\n      0x20\n        /* \"#utility.yul\":3895:3916   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3952:3954   */\n      0x1d\n        /* \"#utility.yul\":3932:3950   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3925:3955   */\n      mstore\n        /* \"#utility.yul\":3991:4022   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3986:3988   */\n      0x40\n        /* \"#utility.yul\":3971:3989   */\n      dup3\n      add\n        /* \"#utility.yul\":3964:4023   */\n      mstore\n        /* \"#utility.yul\":4055:4057   */\n      0x60\n        /* \"#utility.yul\":4040:4058   */\n      add\n      swap1\n        /* \"#utility.yul\":3885:4064   */\n      jump\t// out\n        /* \"#utility.yul\":4069:4471   */\n    tag_224:\n        /* \"#utility.yul\":4271:4273   */\n      0x20\n        /* \"#utility.yul\":4253:4274   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4310:4312   */\n      0x26\n        /* \"#utility.yul\":4290:4308   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4283:4313   */\n      mstore\n        /* \"#utility.yul\":4349:4383   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":4344:4346   */\n      0x40\n        /* \"#utility.yul\":4329:4347   */\n      dup3\n      add\n        /* \"#utility.yul\":4322:4384   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":4415:4417   */\n      0x60\n        /* \"#utility.yul\":4400:4418   */\n      dup3\n      add\n        /* \"#utility.yul\":4393:4429   */\n      mstore\n        /* \"#utility.yul\":4461:4464   */\n      0x80\n        /* \"#utility.yul\":4446:4465   */\n      add\n      swap1\n        /* \"#utility.yul\":4243:4471   */\n      jump\t// out\n        /* \"#utility.yul\":4476:4830   */\n    tag_109:\n        /* \"#utility.yul\":4678:4680   */\n      0x20\n        /* \"#utility.yul\":4660:4681   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4717:4719   */\n      0x1e\n        /* \"#utility.yul\":4697:4715   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4690:4720   */\n      mstore\n        /* \"#utility.yul\":4756:4788   */\n      0x466565206d757374206265206265747765656e20302520616e64203130250000\n        /* \"#utility.yul\":4751:4753   */\n      0x40\n        /* \"#utility.yul\":4736:4754   */\n      dup3\n      add\n        /* \"#utility.yul\":4729:4789   */\n      mstore\n        /* \"#utility.yul\":4821:4823   */\n      0x60\n        /* \"#utility.yul\":4806:4824   */\n      add\n      swap1\n        /* \"#utility.yul\":4650:4830   */\n      jump\t// out\n        /* \"#utility.yul\":4835:5191   */\n    tag_104:\n        /* \"#utility.yul\":5037:5039   */\n      0x20\n        /* \"#utility.yul\":5019:5040   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5056:5074   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5049:5079   */\n      mstore\n        /* \"#utility.yul\":5115:5149   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5110:5112   */\n      0x40\n        /* \"#utility.yul\":5095:5113   */\n      dup3\n      add\n        /* \"#utility.yul\":5088:5150   */\n      mstore\n        /* \"#utility.yul\":5182:5184   */\n      0x60\n        /* \"#utility.yul\":5167:5185   */\n      add\n      swap1\n        /* \"#utility.yul\":5009:5191   */\n      jump\t// out\n        /* \"#utility.yul\":5196:5597   */\n    tag_216:\n        /* \"#utility.yul\":5398:5400   */\n      0x20\n        /* \"#utility.yul\":5380:5401   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5437:5439   */\n      0x25\n        /* \"#utility.yul\":5417:5435   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5410:5440   */\n      mstore\n        /* \"#utility.yul\":5476:5510   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5471:5473   */\n      0x40\n        /* \"#utility.yul\":5456:5474   */\n      dup3\n      add\n        /* \"#utility.yul\":5449:5511   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5542:5544   */\n      0x60\n        /* \"#utility.yul\":5527:5545   */\n      dup3\n      add\n        /* \"#utility.yul\":5520:5555   */\n      mstore\n        /* \"#utility.yul\":5587:5590   */\n      0x80\n        /* \"#utility.yul\":5572:5591   */\n      add\n      swap1\n        /* \"#utility.yul\":5370:5597   */\n      jump\t// out\n        /* \"#utility.yul\":5602:6002   */\n    tag_186:\n        /* \"#utility.yul\":5804:5806   */\n      0x20\n        /* \"#utility.yul\":5786:5807   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5843:5845   */\n      0x24\n        /* \"#utility.yul\":5823:5841   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5816:5846   */\n      mstore\n        /* \"#utility.yul\":5882:5916   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5877:5879   */\n      0x40\n        /* \"#utility.yul\":5862:5880   */\n      dup3\n      add\n        /* \"#utility.yul\":5855:5917   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5948:5950   */\n      0x60\n        /* \"#utility.yul\":5933:5951   */\n      dup3\n      add\n        /* \"#utility.yul\":5926:5960   */\n      mstore\n        /* \"#utility.yul\":5992:5995   */\n      0x80\n        /* \"#utility.yul\":5977:5996   */\n      add\n      swap1\n        /* \"#utility.yul\":5776:6002   */\n      jump\t// out\n        /* \"#utility.yul\":6007:6408   */\n    tag_160:\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6191:6212   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6248:6250   */\n      0x25\n        /* \"#utility.yul\":6228:6246   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6221:6251   */\n      mstore\n        /* \"#utility.yul\":6287:6321   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6282:6284   */\n      0x40\n        /* \"#utility.yul\":6267:6285   */\n      dup3\n      add\n        /* \"#utility.yul\":6260:6322   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6353:6355   */\n      0x60\n        /* \"#utility.yul\":6338:6356   */\n      dup3\n      add\n        /* \"#utility.yul\":6331:6366   */\n      mstore\n        /* \"#utility.yul\":6398:6401   */\n      0x80\n        /* \"#utility.yul\":6383:6402   */\n      add\n      swap1\n        /* \"#utility.yul\":6181:6408   */\n      jump\t// out\n        /* \"#utility.yul\":6413:6590   */\n    tag_42:\n        /* \"#utility.yul\":6559:6584   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6532:6550   */\n      add\n      swap1\n        /* \"#utility.yul\":6514:6590   */\n      jump\t// out\n        /* \"#utility.yul\":6595:6779   */\n    tag_51:\n        /* \"#utility.yul\":6767:6771   */\n      0xff\n        /* \"#utility.yul\":6755:6772   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6737:6773   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6725:6727   */\n      0x20\n        /* \"#utility.yul\":6710:6728   */\n      add\n      swap1\n        /* \"#utility.yul\":6692:6779   */\n      jump\t// out\n        /* \"#utility.yul\":6784:6912   */\n    tag_133:\n      0x00\n        /* \"#utility.yul\":6855:6856   */\n      dup3\n        /* \"#utility.yul\":6851:6857   */\n      not\n        /* \"#utility.yul\":6848:6849   */\n      dup3\n        /* \"#utility.yul\":6845:6858   */\n      gt\n        /* \"#utility.yul\":6842:6844   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":6861:6879   */\n      tag_272\n      tag_273\n      jump\t// in\n    tag_272:\n      pop\n        /* \"#utility.yul\":6897:6906   */\n      add\n      swap1\n        /* \"#utility.yul\":6832:6912   */\n      jump\t// out\n        /* \"#utility.yul\":6917:7134   */\n    tag_207:\n      0x00\n        /* \"#utility.yul\":6983:6984   */\n      dup3\n        /* \"#utility.yul\":6973:6975   */\n      tag_275\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7008:7039   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7062:7066   */\n      0x12\n        /* \"#utility.yul\":7059:7060   */\n      0x04\n        /* \"#utility.yul\":7052:7067   */\n      mstore\n        /* \"#utility.yul\":7090:7094   */\n      0x24\n        /* \"#utility.yul\":7015:7016   */\n      dup2\n        /* \"#utility.yul\":7080:7095   */\n      revert\n        /* \"#utility.yul\":6973:6975   */\n    tag_275:\n      pop\n        /* \"#utility.yul\":7119:7128   */\n      div\n      swap1\n        /* \"#utility.yul\":6963:7134   */\n      jump\t// out\n        /* \"#utility.yul\":7139:7307   */\n    tag_205:\n      0x00\n        /* \"#utility.yul\":7245:7246   */\n      dup2\n        /* \"#utility.yul\":7241:7242   */\n      0x00\n        /* \"#utility.yul\":7237:7243   */\n      not\n        /* \"#utility.yul\":7233:7247   */\n      div\n        /* \"#utility.yul\":7230:7231   */\n      dup4\n        /* \"#utility.yul\":7227:7248   */\n      gt\n        /* \"#utility.yul\":7222:7223   */\n      dup3\n        /* \"#utility.yul\":7215:7224   */\n      iszero\n        /* \"#utility.yul\":7208:7225   */\n      iszero\n        /* \"#utility.yul\":7204:7249   */\n      and\n        /* \"#utility.yul\":7201:7203   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":7252:7270   */\n      tag_278\n      tag_273\n      jump\t// in\n    tag_278:\n      pop\n        /* \"#utility.yul\":7292:7301   */\n      mul\n      swap1\n        /* \"#utility.yul\":7191:7307   */\n      jump\t// out\n        /* \"#utility.yul\":7312:7437   */\n    tag_209:\n      0x00\n        /* \"#utility.yul\":7380:7381   */\n      dup3\n        /* \"#utility.yul\":7377:7378   */\n      dup3\n        /* \"#utility.yul\":7374:7382   */\n      lt\n        /* \"#utility.yul\":7371:7373   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":7385:7403   */\n      tag_281\n      tag_273\n      jump\t// in\n    tag_281:\n      pop\n        /* \"#utility.yul\":7422:7431   */\n      sub\n      swap1\n        /* \"#utility.yul\":7361:7437   */\n      jump\t// out\n        /* \"#utility.yul\":7442:7822   */\n    tag_112:\n        /* \"#utility.yul\":7527:7528   */\n      0x02\n        /* \"#utility.yul\":7517:7529   */\n      dup2\n      div\n        /* \"#utility.yul\":7574:7575   */\n      0x01\n        /* \"#utility.yul\":7564:7576   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7585:7587   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":7639:7643   */\n      0x7f\n        /* \"#utility.yul\":7631:7637   */\n      dup3\n        /* \"#utility.yul\":7627:7644   */\n      and\n        /* \"#utility.yul\":7617:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7585:7587   */\n    tag_283:\n        /* \"#utility.yul\":7692:7694   */\n      0x20\n        /* \"#utility.yul\":7684:7690   */\n      dup3\n        /* \"#utility.yul\":7681:7695   */\n      lt\n        /* \"#utility.yul\":7661:7679   */\n      dup2\n        /* \"#utility.yul\":7658:7696   */\n      eq\n        /* \"#utility.yul\":7655:7657   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":7738:7748   */\n      0x4e487b71\n        /* \"#utility.yul\":7733:7736   */\n      0xe0\n        /* \"#utility.yul\":7729:7749   */\n      shl\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7719:7750   */\n      mstore\n        /* \"#utility.yul\":7773:7777   */\n      0x22\n        /* \"#utility.yul\":7770:7771   */\n      0x04\n        /* \"#utility.yul\":7763:7778   */\n      mstore\n        /* \"#utility.yul\":7801:7805   */\n      0x24\n        /* \"#utility.yul\":7798:7799   */\n      0x00\n        /* \"#utility.yul\":7791:7806   */\n      revert\n        /* \"#utility.yul\":7655:7657   */\n    tag_284:\n      pop\n        /* \"#utility.yul\":7497:7822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7827:7954   */\n    tag_273:\n        /* \"#utility.yul\":7888:7898   */\n      0x4e487b71\n        /* \"#utility.yul\":7883:7886   */\n      0xe0\n        /* \"#utility.yul\":7879:7899   */\n      shl\n        /* \"#utility.yul\":7876:7877   */\n      0x00\n        /* \"#utility.yul\":7869:7900   */\n      mstore\n        /* \"#utility.yul\":7919:7923   */\n      0x11\n        /* \"#utility.yul\":7916:7917   */\n      0x04\n        /* \"#utility.yul\":7909:7924   */\n      mstore\n        /* \"#utility.yul\":7943:7947   */\n      0x24\n        /* \"#utility.yul\":7940:7941   */\n      0x00\n        /* \"#utility.yul\":7933:7948   */\n      revert\n\n    auxdata: 0xa26469706673582212206ffdea4ebb53e14c3bbd82d52a443db5be9aa69fb8c9bd838a5e7327cf9c207864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2914:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:6",
														"type": ""
													}
												],
												"src": "14:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:6",
														"type": ""
													}
												],
												"src": "374:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "631:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "633:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "633:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "633:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:6"
															},
															"nodeType": "YulIf",
															"src": "614:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "662:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "673:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "676:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "669:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "662:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:6",
														"type": ""
													}
												],
												"src": "556:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:376:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "776:15:6",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "785:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "776:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "800:13:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "808:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "800:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "847:289:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "861:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "871:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "865:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "913:9:6",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "915:5:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "898:8:6"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "908:2:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "895:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "895:16:6"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "888:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "888:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "885:2:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "963:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "965:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "965:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "965:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "941:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "951:3:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "956:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "947:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "947:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "938:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "938:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "935:2:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1019:29:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1021:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "1034:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1041:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1030:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1030:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1021:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1005:8:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1015:2:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1001:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1001:17:6"
																		},
																		"nodeType": "YulIf",
																		"src": "998:2:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1061:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1073:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1079:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1069:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1069:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1061:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1097:29:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1113:2:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1117:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "1109:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1109:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1097:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"kind": "bool",
																"nodeType": "YulLiteral",
																"src": "830:4:6",
																"type": "",
																"value": "true"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "835:3:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "826:3:6",
																"statements": []
															},
															"src": "822:314:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "717:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "725:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "732:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "742:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "750:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "757:4:6",
														"type": ""
													}
												],
												"src": "689:453:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1225:64:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1255:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1265:8:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1261:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1282:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1282:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1234:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:55:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1225:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1192:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1205:5:6",
														"type": ""
													}
												],
												"src": "1147:148:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1364:858:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1402:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1416:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1425:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1416:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1439:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1384:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:16:6"
															},
															"nodeType": "YulIf",
															"src": "1374:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1487:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1501:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1510:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1501:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1524:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1473:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:12:6"
															},
															"nodeType": "YulIf",
															"src": "1463:2:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1575:52:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1589:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1589:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1612:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1568:59:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1643:176:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1678:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1680:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1680:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1680:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1663:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1673:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1660:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "1657:2:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1713:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1726:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1736:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1722:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1722:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1713:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1769:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1771:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1771:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1771:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1757:5:6"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "1764:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1754:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1754:14:6"
																				},
																				"nodeType": "YulIf",
																				"src": "1751:2:6"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1804:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1636:183:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1555:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "1548:271:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1917:123:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1931:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1944:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1950:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1940:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1931:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1990:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "1992:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1992:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "1978:5:6"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "1985:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1975:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:14:6"
																		},
																		"nodeType": "YulIf",
																		"src": "1972:2:6"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2025:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1841:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1847:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1838:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1838:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1855:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1865:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1852:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1852:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1834:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1878:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1884:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1875:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1875:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1893:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1903:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1890:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1890:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1831:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:77:6"
															},
															"nodeType": "YulIf",
															"src": "1828:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2049:65:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2091:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2094:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2100:8:6"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "2110:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2072:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2053:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "2062:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2156:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2158:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2158:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2158:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2129:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "2142:3:6"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "2147:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:16:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2126:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2126:29:6"
															},
															"nodeType": "YulIf",
															"src": "2123:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2187:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2200:7:6"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "2209:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2196:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2187:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1330:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1336:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "1346:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1354:5:6",
														"type": ""
													}
												],
												"src": "1300:922:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2340:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2310:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2303:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2303:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2296:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2318:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2325:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2325:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2333:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2315:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:45:6"
															},
															"nodeType": "YulIf",
															"src": "2289:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2369:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2384:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2387:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2369:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2258:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2261:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2267:7:6",
														"type": ""
													}
												],
												"src": "2227:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2465:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2479:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2485:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2475:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2475:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2496:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2526:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2532:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2522:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2500:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2575:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2589:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2597:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2585:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2553:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:26:6"
															},
															"nodeType": "YulIf",
															"src": "2543:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2663:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2691:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2687:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2687:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2728:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2731:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2721:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2721:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2759:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2749:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2749:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2749:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2619:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2642:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2650:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2639:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2616:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:38:6"
															},
															"nodeType": "YulIf",
															"src": "2613:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2435:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2444:6:6",
														"type": ""
													}
												],
												"src": "2400:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2817:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2841:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2846:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2837:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2837:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2874:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2867:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2898:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2891:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2891:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2891:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2785:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff), not(0))\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2AB337AD34B7B6902A37B5B2B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x55464F PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x71 SWAP3 SWAP2 SWAP1 PUSH3 0x239 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x87 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x239 JUMP JUMPDEST POP POP POP PUSH3 0xA4 PUSH3 0x9E PUSH3 0xF7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xFB JUMP JUMPDEST PUSH3 0xD7 CALLER PUSH3 0xB3 PUSH3 0x14D JUMP JUMPDEST PUSH3 0xC0 SWAP1 PUSH1 0xA PUSH3 0x387 JUMP JUMPDEST PUSH3 0xD1 SWAP1 PUSH5 0xE8D4A51000 PUSH3 0x47F JUMP JUMPDEST PUSH3 0x152 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x4F4 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17B SWAP1 PUSH3 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x192 PUSH1 0x0 DUP4 DUP4 PUSH3 0x234 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A6 SWAP2 SWAP1 PUSH3 0x31F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1D5 SWAP1 DUP5 SWAP1 PUSH3 0x31F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x21A SWAP1 DUP6 SWAP1 PUSH3 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x230 PUSH1 0x0 DUP4 DUP4 PUSH3 0x234 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x247 SWAP1 PUSH3 0x4A1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x26B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2B6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x286 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x299 JUMP JUMPDEST POP PUSH3 0x2C4 SWAP3 SWAP2 POP PUSH3 0x2C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x335 JUMPI PUSH3 0x335 PUSH3 0x4DE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH3 0x34E JUMPI POP PUSH3 0x37E JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH3 0x363 JUMPI PUSH3 0x363 PUSH3 0x4DE JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH3 0x371 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH3 0x33D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39B PUSH1 0x0 NOT PUSH1 0xFF DUP6 AND DUP5 PUSH3 0x3A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3B3 JUMPI POP PUSH1 0x1 PUSH3 0x39B JUMP JUMPDEST DUP2 PUSH3 0x3C2 JUMPI POP PUSH1 0x0 PUSH3 0x39B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x3DB JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x3E6 JUMPI PUSH3 0x41A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x39B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x3FA JUMPI PUSH3 0x3FA PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x413 JUMPI PUSH3 0x413 PUSH3 0x4DE JUMP JUMPDEST POP PUSH3 0x39B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x452 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH3 0x44C JUMPI PUSH3 0x44C PUSH3 0x4DE JUMP JUMPDEST PUSH3 0x39B JUMP JUMPDEST PUSH3 0x461 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x33A JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x476 PUSH3 0x4DE JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x49C JUMPI PUSH3 0x49C PUSH3 0x4DE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xE94 DUP1 PUSH3 0x504 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70D5AE05 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x270 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA071DCF4 EQ PUSH2 0x21C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x61C82D0 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xA94 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x143 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x16C PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29C PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0xE0D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32C SWAP1 PUSH2 0xE0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x379 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x379 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38E PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH2 0x39B DUP2 DUP6 DUP6 PUSH2 0x69A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3B6 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C3 DUP6 DUP3 DUP6 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x3CE DUP6 DUP6 DUP6 PUSH2 0x798 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x39B SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x425 SWAP1 DUP8 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x432 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x443 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH2 0x4BA PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CB PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x838 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x52C PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x3CE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x58D PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH2 0x39B DUP2 DUP6 DUP6 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5CD PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5DE PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x62D PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63E PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x693 DUP2 PUSH2 0x838 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x741 SWAP1 DUP6 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A DUP5 DUP5 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x792 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x792 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x69A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x7D7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x7EC JUMPI PUSH2 0x7E7 DUP4 DUP4 DUP4 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x816 DUP3 DUP5 PUSH2 0xDF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x825 DUP6 PUSH2 0xDEAD DUP5 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x830 DUP6 DUP6 DUP4 PUSH2 0x88A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x8E1 DUP4 DUP4 DUP4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x951 SWAP1 DUP5 SWAP1 PUSH2 0xD9F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x99B SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x792 DUP5 DUP5 DUP5 PUSH2 0x833 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9DF DUP3 PUSH2 0x9AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA01 DUP4 PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP PUSH2 0xA0F PUSH1 0x20 DUP5 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA35 DUP5 PUSH2 0x9AE JUMP JUMPDEST SWAP3 POP PUSH2 0xA43 PUSH1 0x20 DUP6 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA65 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA6E DUP4 PUSH2 0x9AE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xADF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAC3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAF0 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20302520616E64203130250000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDB2 JUMPI PUSH2 0xDB2 PUSH2 0xE48 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF1 PUSH2 0xE48 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE08 JUMPI PUSH2 0xE08 PUSH2 0xE48 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE21 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xFDEA4EBB53E14C3BBD82D52A443DB5BE SWAP11 0xA6 SWAP16 0xB8 0xC9 0xBD DUP4 DUP11 0x5E PUSH20 0x27CF9C207864736F6C6343000800003300000000 ",
							"sourceMap": "427:2705:0:-:0;;;703:1;679:25;;963:255;;;;;;;;;;1978:113:2;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1069:55:0::1;1075:10;1113;:8;:10::i;:::-;1107:16;::::0;:2:::1;:16;:::i;:::-;1087:36;::::0;:17:::1;:36;:::i;:::-;1069:5;:55::i;:::-;1192:10;1173:30;::::0;;;:18:::1;:30;::::0;;;;:37;;-1:-1:-1;;1173:37:0::1;1206:4;1173:37;::::0;;427:2705;;640:96:5;719:10;640:96;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;3093:91:2:-;3175:2;3093:91;:::o;8415:389::-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;;;;;;:::i;:::-;;;;;;;;;8566:49;8595:1;8599:7;8608:6;8566:20;:49::i;:::-;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;;;8731:6;;8701:37;:::i;:::-;;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;:48::i;:::-;8415:389;;:::o;11795:121::-;;;;:::o;427:2705:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;427:2705:0;;;-1:-1:-1;427:2705:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:355:6;216:2;198:21;;;255:2;235:18;;;228:30;294:33;289:2;274:18;;267:61;360:2;345:18;;188:181::o;374:177::-;520:25;;;508:2;493:18;;475:76::o;556:128::-;;627:1;623:6;620:1;617:13;614:2;;;633:18;;:::i;:::-;-1:-1:-1;669:9:6;;604:80::o;689:453::-;785:6;808:5;822:314;871:1;908:2;898:8;895:16;885:2;;915:5;;;885:2;956:4;951:3;947:14;941:4;938:24;935:2;;;965:18;;:::i;:::-;1015:2;1005:8;1001:17;998:2;;;1030:16;;;;998:2;1109:17;;;;;1069:15;;822:314;;;766:376;;;;;;;:::o;1147:148::-;;1234:55;-1:-1:-1;;1275:4:6;1261:19;;1255:4;1234:55;:::i;:::-;1225:64;1215:80;-1:-1:-1;;;1215:80:6:o;1300:922::-;;1384:8;1374:2;;-1:-1:-1;1425:1:6;1439:5;;1374:2;1473:4;1463:2;;-1:-1:-1;1510:1:6;1524:5;;1463:2;1555:4;1573:1;1568:59;;;;1641:1;1636:183;;;;1548:271;;1568:59;1598:1;1589:10;;1612:5;;;1636:183;1673:3;1663:8;1660:17;1657:2;;;1680:18;;:::i;:::-;1736:1;1726:8;1722:16;1713:25;;1764:3;1757:5;1754:14;1751:2;;;1771:18;;:::i;:::-;1804:5;;;1548:271;;1903:2;1893:8;1890:16;1884:3;1878:4;1875:13;1871:36;1865:2;1855:8;1852:16;1847:2;1841:4;1838:12;1834:35;1831:77;1828:2;;;-1:-1:-1;1940:19:6;;;1975:14;;;1972:2;;;1992:18;;:::i;:::-;2025:5;;1828:2;2072:42;2110:3;2100:8;2094:4;2091:1;2072:42;:::i;:::-;2147:6;2142:3;2138:16;2129:7;2126:29;2123:2;;;2158:18;;:::i;:::-;2196:20;;1364:858;-1:-1:-1;;;;1364:858:6:o;2227:168::-;;2333:1;2329;2325:6;2321:14;2318:1;2315:21;2310:1;2303:9;2296:17;2292:45;2289:2;;;2340:18;;:::i;:::-;-1:-1:-1;2380:9:6;;2279:116::o;2400:380::-;2485:1;2475:12;;2532:1;2522:12;;;2543:2;;2597:4;2589:6;2585:17;2575:27;;2543:2;2650;2642:6;2639:14;2619:18;2616:38;2613:2;;;2696:10;2691:3;2687:20;2684:1;2677:31;2731:4;2728:1;2721:15;2759:4;2756:1;2749:15;2613:2;;2455:325;;;:::o;2785:127::-;2846:10;2841:3;2837:20;2834:1;2827:31;2877:4;2874:1;2867:15;2901:4;2898:1;2891:15;2817:95;427:2705:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7956:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:6"
															},
															"nodeType": "YulIf",
															"src": "113:2:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:6"
															},
															"nodeType": "YulIf",
															"src": "274:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:6",
														"type": ""
													}
												],
												"src": "194:198:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:187:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:6"
															},
															"nodeType": "YulIf",
															"src": "494:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "397:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:238:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "843:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:6"
															},
															"nodeType": "YulIf",
															"src": "790:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "871:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "970:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "769:6:6",
														"type": ""
													}
												],
												"src": "676:342:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:179:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:6"
															},
															"nodeType": "YulIf",
															"src": "1120:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1201:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1251:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:6",
														"type": ""
													}
												],
												"src": "1023:266:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1364:120:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1419:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:32:6"
															},
															"nodeType": "YulIf",
															"src": "1374:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1445:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1468:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1455:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1330:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1341:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1353:6:6",
														"type": ""
													}
												],
												"src": "1294:190:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1600:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1600:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1657:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1673:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1678:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1669:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1669:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1682:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1665:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1665:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1559:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1570:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1581:4:6",
														"type": ""
													}
												],
												"src": "1489:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1792:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1802:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1814:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1810:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1802:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1844:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1862:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1862:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1855:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1855:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1837:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1761:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1772:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1783:4:6",
														"type": ""
													}
												],
												"src": "1697:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2010:482:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2020:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2030:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2024:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2048:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2059:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2041:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2071:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2085:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2075:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2118:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2129:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2114:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2114:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2107:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2107:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2150:13:6",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2159:4:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2154:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2222:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2251:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2262:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2247:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2247:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2266:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2243:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2243:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2285:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2293:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2281:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2281:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2297:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2277:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2277:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2271:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2271:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2236:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2236:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2236:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2183:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2180:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2194:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2196:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2205:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2208:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2201:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2196:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2176:3:6",
																"statements": []
															},
															"src": "2172:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2346:69:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2375:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2386:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2371:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2371:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2395:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2367:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2367:31:6"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2400:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2360:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2360:45:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2360:45:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2327:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2330:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2324:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:13:6"
															},
															"nodeType": "YulIf",
															"src": "2321:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2424:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2440:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2459:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2467:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2455:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2455:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2476:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2472:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2472:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2451:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2451:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2436:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2424:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1979:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1990:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2001:4:6",
														"type": ""
													}
												],
												"src": "1889:603:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2671:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2688:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2699:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2681:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2722:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2733:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2718:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2718:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2738:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2711:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2761:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2772:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2757:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2777:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2832:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2843:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2828:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2848:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2821:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2648:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2662:4:6",
														"type": ""
													}
												],
												"src": "2497:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3075:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3137:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3115:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3165:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3176:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3181:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3236:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3247:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3252:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3225:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3270:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3282:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3270:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3052:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3066:4:6",
														"type": ""
													}
												],
												"src": "2901:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3482:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3499:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3510:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3492:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3533:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3544:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3549:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3572:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3583:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3588:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3561:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3643:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3659:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3673:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3685:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3696:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3681:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3673:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3459:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3473:4:6",
														"type": ""
													}
												],
												"src": "3308:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3902:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3913:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3895:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3895:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3936:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3947:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3932:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3932:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3952:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3925:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3975:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3986:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3971:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3971:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3991:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4032:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4044:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4032:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3862:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3876:4:6",
														"type": ""
													}
												],
												"src": "3711:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4243:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4294:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4305:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4310:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4283:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4333:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4344:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4349:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4322:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4400:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4420:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4393:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4393:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4393:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4438:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4450:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4461:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4438:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4220:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4234:4:6",
														"type": ""
													}
												],
												"src": "4069:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4650:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4667:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4678:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4660:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4660:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4712:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4717:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4740:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4751:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4736:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4756:32:6",
																		"type": "",
																		"value": "Fee must be between 0% and 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:60:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4729:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4810:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4821:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4806:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c9e7b56c818d48799f7d06e4b345bdd04b5b22360436c0e00b40825c2d7f3df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4627:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4641:4:6",
														"type": ""
													}
												],
												"src": "4476:354:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5009:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5026:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5037:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5019:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5019:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5060:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5071:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5076:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5049:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5099:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5110:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5095:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5095:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5115:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5088:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5088:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5159:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5171:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5159:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4986:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5000:4:6",
														"type": ""
													}
												],
												"src": "4835:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5370:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5387:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5398:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5421:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5432:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5417:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5417:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5437:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5410:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5460:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5471:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5456:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5476:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5449:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5449:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5449:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5542:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5527:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5547:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5520:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5520:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5564:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5576:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5587:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5572:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5564:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5347:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5361:4:6",
														"type": ""
													}
												],
												"src": "5196:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5776:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5793:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5786:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5786:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5786:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5843:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5816:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5877:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5862:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5882:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5855:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5937:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5948:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5933:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5953:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5926:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5969:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5981:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5992:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5969:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5753:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5767:4:6",
														"type": ""
													}
												],
												"src": "5602:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6181:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6198:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6191:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6232:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6243:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6221:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6271:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6282:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6267:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6287:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6260:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6342:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6353:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6338:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6338:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6358:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6331:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6375:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6387:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6398:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6375:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6158:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6172:4:6",
														"type": ""
													}
												],
												"src": "6007:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6514:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6524:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6536:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6524:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6566:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6577:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6559:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6559:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6483:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6494:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6505:4:6",
														"type": ""
													}
												],
												"src": "6413:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6692:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6702:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6714:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6725:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6710:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6702:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6744:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6737:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6737:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6737:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6661:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6672:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6683:4:6",
														"type": ""
													}
												],
												"src": "6595:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6832:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6859:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6861:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6861:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6861:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6848:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6855:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6851:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6851:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6845:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:13:6"
															},
															"nodeType": "YulIf",
															"src": "6842:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6890:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6901:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6904:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6890:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6815:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6818:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6824:3:6",
														"type": ""
													}
												],
												"src": "6784:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6963:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6994:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7015:1:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7022:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7027:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7018:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7018:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7008:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7008:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7008:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7059:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7062:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7052:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7052:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7052:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7087:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7090:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7080:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7080:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7080:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6983:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6976:9:6"
															},
															"nodeType": "YulIf",
															"src": "6973:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7114:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7123:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7126:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7119:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7114:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6948:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6951:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6957:1:6",
														"type": ""
													}
												],
												"src": "6917:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7191:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7250:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7252:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7252:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7252:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7222:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7215:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7215:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7208:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7208:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7230:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7241:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7237:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7237:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7245:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7233:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7233:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7227:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7227:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:45:6"
															},
															"nodeType": "YulIf",
															"src": "7201:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7281:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7296:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7281:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7170:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7173:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7179:7:6",
														"type": ""
													}
												],
												"src": "7139:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7361:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7383:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7385:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7385:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7385:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7377:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7380:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7374:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7374:8:6"
															},
															"nodeType": "YulIf",
															"src": "7371:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7414:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7426:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7429:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7422:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7422:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7414:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7343:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7346:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7352:4:6",
														"type": ""
													}
												],
												"src": "7312:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7497:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7507:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7521:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7527:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7538:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7568:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7574:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7564:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7564:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7542:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7615:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7617:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7631:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7639:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7627:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7627:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7617:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7595:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:26:6"
															},
															"nodeType": "YulIf",
															"src": "7585:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7705:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7726:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7733:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7738:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7729:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7729:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7719:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7719:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7719:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7770:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7773:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7763:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7763:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7763:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7798:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7801:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7791:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7791:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7791:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7661:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7684:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7681:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7681:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7658:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:38:6"
															},
															"nodeType": "YulIf",
															"src": "7655:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7477:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7486:6:6",
														"type": ""
													}
												],
												"src": "7442:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7859:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7883:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7888:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7879:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7879:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7916:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7940:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7943:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7827:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4c9e7b56c818d48799f7d06e4b345bdd04b5b22360436c0e00b40825c2d7f3df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Fee must be between 0% and 10%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370d5ae05116100ad578063a457c2d711610071578063a457c2d714610224578063a9059cbb14610237578063dd62ed3e1461024a578063ea2f0b371461025d578063f2fde38b1461027057610121565b806370d5ae05146101ef578063715018a6146102045780638da5cb5b1461020c57806395d89b4114610214578063a071dcf41461021c57610121565b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a157806339509351146101b6578063437823ec146101c957806370a08231146101dc57610121565b8063061c82d01461012657806306fdde031461013b578063095ea7b31461015957806318160ddd14610179575b600080fd5b610139610134366004610a7c565b610283565b005b6101436102f1565b6040516101509190610ab3565b60405180910390f35b61016c610167366004610a53565b610383565b6040516101509190610aa8565b6101816103a5565b6040516101509190610d88565b61016c61019c366004610a18565b6103ab565b6101a96103d9565b6040516101509190610d91565b61016c6101c4366004610a53565b6103de565b6101396101d73660046109c5565b61042a565b6101816101ea3660046109c5565b61048d565b6101f76104ac565b6040516101509190610a94565b6101396104b2565b6101f76104fd565b61014361050c565b61018161051b565b61016c610232366004610a53565b610521565b61016c610245366004610a53565b610582565b6101816102583660046109e6565b61059a565b61013961026b3660046109c5565b6105c5565b61013961027e3660046109c5565b610625565b61028b610696565b6001600160a01b031661029c6104fd565b6001600160a01b0316146102cb5760405162461bcd60e51b81526004016102c290610c85565b60405180910390fd5b600a8111156102ec5760405162461bcd60e51b81526004016102c290610c4e565b600655565b60606003805461030090610e0d565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90610e0d565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b5050505050905090565b60008061038e610696565b905061039b81858561069a565b5060019392505050565b60025490565b6000806103b6610696565b90506103c385828561074e565b6103ce858585610798565b506001949350505050565b601290565b6000806103e9610696565b6001600160a01b0380821660009081526001602090815260408083209389168352929052205490915061039b9082908690610425908790610d9f565b61069a565b610432610696565b6001600160a01b03166104436104fd565b6001600160a01b0316146104695760405162461bcd60e51b81526004016102c290610c85565b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b6001600160a01b0381166000908152602081905260409020545b919050565b61dead81565b6104ba610696565b6001600160a01b03166104cb6104fd565b6001600160a01b0316146104f15760405162461bcd60e51b81526004016102c290610c85565b6104fb6000610838565b565b6005546001600160a01b031690565b60606004805461030090610e0d565b60065481565b60008061052c610696565b6001600160a01b03808216600090815260016020908152604080832093891683529290522054909150838110156105755760405162461bcd60e51b81526004016102c290610d43565b6103ce828686840361069a565b60008061058d610696565b905061039b818585610798565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105cd610696565b6001600160a01b03166105de6104fd565b6001600160a01b0316146106045760405162461bcd60e51b81526004016102c290610c85565b6001600160a01b03166000908152600760205260409020805460ff19169055565b61062d610696565b6001600160a01b031661063e6104fd565b6001600160a01b0316146106645760405162461bcd60e51b81526004016102c290610c85565b6001600160a01b03811661068a5760405162461bcd60e51b81526004016102c290610b49565b61069381610838565b50565b3390565b6001600160a01b0383166106c05760405162461bcd60e51b81526004016102c290610cff565b6001600160a01b0382166106e65760405162461bcd60e51b81526004016102c290610b8f565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610741908590610d88565b60405180910390a3505050565b600061075a848461059a565b9050600019811461079257818110156107855760405162461bcd60e51b81526004016102c290610bd1565b610792848484840361069a565b50505050565b6001600160a01b03831660009081526007602052604090205460ff16806107d757506001600160a01b03821660009081526007602052604090205460ff165b156107ec576107e783838361088a565b610833565b60006064600654836107fe9190610dd7565b6108089190610db7565b905060006108168284610df6565b90506108258561dead8461088a565b61083085858361088a565b50505b505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166108b05760405162461bcd60e51b81526004016102c290610cba565b6001600160a01b0382166108d65760405162461bcd60e51b81526004016102c290610b06565b6108e1838383610833565b6001600160a01b0383166000908152602081905260409020548181101561091a5760405162461bcd60e51b81526004016102c290610c08565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610951908490610d9f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161099b9190610d88565b60405180910390a3610792848484610833565b80356001600160a01b03811681146104a757600080fd5b6000602082840312156109d6578081fd5b6109df826109ae565b9392505050565b600080604083850312156109f8578081fd5b610a01836109ae565b9150610a0f602084016109ae565b90509250929050565b600080600060608486031215610a2c578081fd5b610a35846109ae565b9250610a43602085016109ae565b9150604084013590509250925092565b60008060408385031215610a65578182fd5b610a6e836109ae565b946020939093013593505050565b600060208284031215610a8d578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610adf57858101830151858201604001528201610ac3565b81811115610af05783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601e908201527f466565206d757374206265206265747765656e20302520616e64203130250000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610db257610db2610e48565b500190565b600082610dd257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610df157610df1610e48565b500290565b600082821015610e0857610e08610e48565b500390565b600281046001821680610e2157607f821691505b60208210811415610e4257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206ffdea4ebb53e14c3bbd82d52a443db5be9aa69fb8c9bd838a5e7327cf9c207864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70D5AE05 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x270 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA071DCF4 EQ PUSH2 0x21C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x61C82D0 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xA94 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x143 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x16C PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29C PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0xE0D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32C SWAP1 PUSH2 0xE0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x379 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x379 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38E PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH2 0x39B DUP2 DUP6 DUP6 PUSH2 0x69A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3B6 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C3 DUP6 DUP3 DUP6 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x3CE DUP6 DUP6 DUP6 PUSH2 0x798 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x39B SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x425 SWAP1 DUP8 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x432 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x443 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH2 0x4BA PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CB PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x838 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x52C PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x3CE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x58D PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH2 0x39B DUP2 DUP6 DUP6 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5CD PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5DE PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x62D PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63E PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x693 DUP2 PUSH2 0x838 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x741 SWAP1 DUP6 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A DUP5 DUP5 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x792 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x792 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x69A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x7D7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x7EC JUMPI PUSH2 0x7E7 DUP4 DUP4 DUP4 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x816 DUP3 DUP5 PUSH2 0xDF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x825 DUP6 PUSH2 0xDEAD DUP5 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x830 DUP6 DUP6 DUP4 PUSH2 0x88A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x8E1 DUP4 DUP4 DUP4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x951 SWAP1 DUP5 SWAP1 PUSH2 0xD9F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x99B SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x792 DUP5 DUP5 DUP5 PUSH2 0x833 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9DF DUP3 PUSH2 0x9AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA01 DUP4 PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP PUSH2 0xA0F PUSH1 0x20 DUP5 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA35 DUP5 PUSH2 0x9AE JUMP JUMPDEST SWAP3 POP PUSH2 0xA43 PUSH1 0x20 DUP6 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA65 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA6E DUP4 PUSH2 0x9AE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xADF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAC3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAF0 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20302520616E64203130250000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDB2 JUMPI PUSH2 0xDB2 PUSH2 0xE48 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF1 PUSH2 0xE48 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE08 JUMPI PUSH2 0xE08 PUSH2 0xE48 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE21 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xFDEA4EBB53E14C3BBD82D52A443DB5BE SWAP11 0xA6 SWAP16 0xB8 0xC9 0xBD DUP4 DUP11 0x5E PUSH20 0x27CF9C207864736F6C6343000800003300000000 ",
							"sourceMap": "427:2705:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:164;;;;;;:::i;:::-;;:::i;:::-;;2156:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3244:106::-;;;:::i;:::-;;;;;;;:::i;5192:286::-;;;;;;:::i;:::-;;:::i;3093:91::-;;;:::i;:::-;;;;;;;:::i;5873:236::-;;;;;;:::i;:::-;;:::i;1387:113:0:-;;;;;;:::i;:::-;;:::i;3408:125:2:-;;;;;;:::i;:::-;;:::i;533:80:0:-;;;:::i;:::-;;;;;;;:::i;1668:101:1:-;;;:::i;1036:85::-;;;:::i;2367:102:2:-;;;:::i;679:25:0:-;;;:::i;6596:429:2:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;1667:112:0:-;;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;:::i;:::-;;:::i;1938:164:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;2034:2:0::1;2027:3;:9;;2007:64;;;;-1:-1:-1::0;;;2007:64:0::1;;;;;;;:::i;:::-;2082:6;:12:::0;1938:164::o;2156:98:2:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:2;;4433:197;-1:-1:-1;;;4433:197:2:o;3244:106::-;3331:12;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;3093:91::-;3175:2;3093:91;:::o;5873:236::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;-1:-1:-1;;;;;6040:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;5977:28;;-1:-1:-1;6015:66:2;;5977:28;;6031:7;;6040:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;1387:113:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1458:27:0::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;1458:34:0::1;1488:4;1458:34;::::0;;1387:113::o;3408:125:2:-;-1:-1:-1;;;;;3508:18:2;;3482:7;3508:18;;;;;;;;;;;3408:125;;;;:::o;533:80:0:-;571:42;533:80;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:1;1036:85;:::o;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;679:25:0:-;;;;:::o;6596:429:2:-;6689:4;6705:13;6721:12;:10;:12::i;:::-;-1:-1:-1;;;;;6770:18:2;;;6743:24;6770:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;6705:28;;-1:-1:-1;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;;;;;;:::i;:::-;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;1667:112:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1736:27:0::1;1766:5;1736:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;1736:35:0::1;::::0;;1667:112::o;1918:198:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:1::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:5:-;719:10;640:96;:::o;10123:370:2:-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10454:32;;;;;10433:6;;10454:32;:::i;:::-;;;;;;;;10123:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:2;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;;;;;;:::i;:::-;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;2390:739:0:-;-1:-1:-1;;;;;2493:26:0;;;;;;:18;:26;;;;;;;;;:59;;-1:-1:-1;;;;;;2523:29:0;;;;;;:18;:29;;;;;;;;2493:59;2489:633;;;2665:42;2681:6;2689:9;2700:6;2665:15;:42::i;:::-;2489:633;;;2781:17;2819:3;2810:6;;2801;:15;;;;:::i;:::-;:21;;;;:::i;:::-;2781:41;-1:-1:-1;2837:22:0;2862:18;2781:41;2862:6;:18;:::i;:::-;2837:43;;2933:47;2949:6;571:42;2970:9;2933:15;:47::i;:::-;3060:50;3076:6;3084:9;3095:14;3060:15;:50::i;:::-;2489:633;;;2390:739;;;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;7488:651:2:-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;;;;;;:::i;:::-;7759:38;7780:4;7786:2;7790:6;7759:20;:38::i;:::-;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;7961:15:2;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;;;:::i;:::-;;;;;;;;8095:37;8115:4;8121:2;8125:6;8095:19;:37::i;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:6:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:6:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:6;;1364:120;-1:-1:-1;1364:120:6:o;1489:203::-;-1:-1:-1;;;;;1653:32:6;;;;1635:51;;1623:2;1608:18;;1590:102::o;1697:187::-;1862:14;;1855:22;1837:41;;1825:2;1810:18;;1792:92::o;1889:603::-;;2030:2;2059;2048:9;2041:21;2091:6;2085:13;2134:6;2129:2;2118:9;2114:18;2107:34;2159:4;2172:140;2186:6;2183:1;2180:13;2172:140;;;2281:14;;;2277:23;;2271:30;2247:17;;;2266:2;2243:26;2236:66;2201:10;;2172:140;;;2330:6;2327:1;2324:13;2321:2;;;2400:4;2395:2;2386:6;2375:9;2371:22;2367:31;2360:45;2321:2;-1:-1:-1;2476:2:6;2455:15;-1:-1:-1;;2451:29:6;2436:45;;;;2483:2;2432:54;;2010:482;-1:-1:-1;;;2010:482:6:o;2497:399::-;2699:2;2681:21;;;2738:2;2718:18;;;2711:30;2777:34;2772:2;2757:18;;2750:62;-1:-1:-1;;;2843:2:6;2828:18;;2821:33;2886:3;2871:19;;2671:225::o;2901:402::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:34;3176:2;3161:18;;3154:62;-1:-1:-1;;;3247:2:6;3232:18;;3225:36;3293:3;3278:19;;3075:228::o;3308:398::-;3510:2;3492:21;;;3549:2;3529:18;;;3522:30;3588:34;3583:2;3568:18;;3561:62;-1:-1:-1;;;3654:2:6;3639:18;;3632:32;3696:3;3681:19;;3482:224::o;3711:353::-;3913:2;3895:21;;;3952:2;3932:18;;;3925:30;3991:31;3986:2;3971:18;;3964:59;4055:2;4040:18;;3885:179::o;4069:402::-;4271:2;4253:21;;;4310:2;4290:18;;;4283:30;4349:34;4344:2;4329:18;;4322:62;-1:-1:-1;;;4415:2:6;4400:18;;4393:36;4461:3;4446:19;;4243:228::o;4476:354::-;4678:2;4660:21;;;4717:2;4697:18;;;4690:30;4756:32;4751:2;4736:18;;4729:60;4821:2;4806:18;;4650:180::o;4835:356::-;5037:2;5019:21;;;5056:18;;;5049:30;5115:34;5110:2;5095:18;;5088:62;5182:2;5167:18;;5009:182::o;5196:401::-;5398:2;5380:21;;;5437:2;5417:18;;;5410:30;5476:34;5471:2;5456:18;;5449:62;-1:-1:-1;;;5542:2:6;5527:18;;5520:35;5587:3;5572:19;;5370:227::o;5602:400::-;5804:2;5786:21;;;5843:2;5823:18;;;5816:30;5882:34;5877:2;5862:18;;5855:62;-1:-1:-1;;;5948:2:6;5933:18;;5926:34;5992:3;5977:19;;5776:226::o;6007:401::-;6209:2;6191:21;;;6248:2;6228:18;;;6221:30;6287:34;6282:2;6267:18;;6260:62;-1:-1:-1;;;6353:2:6;6338:18;;6331:35;6398:3;6383:19;;6181:227::o;6413:177::-;6559:25;;;6547:2;6532:18;;6514:76::o;6595:184::-;6767:4;6755:17;;;;6737:36;;6725:2;6710:18;;6692:87::o;6784:128::-;;6855:1;6851:6;6848:1;6845:13;6842:2;;;6861:18;;:::i;:::-;-1:-1:-1;6897:9:6;;6832:80::o;6917:217::-;;6983:1;6973:2;;-1:-1:-1;;;7008:31:6;;7062:4;7059:1;7052:15;7090:4;7015:1;7080:15;6973:2;-1:-1:-1;7119:9:6;;6963:171::o;7139:168::-;;7245:1;7241;7237:6;7233:14;7230:1;7227:21;7222:1;7215:9;7208:17;7204:45;7201:2;;;7252:18;;:::i;:::-;-1:-1:-1;7292:9:6;;7191:116::o;7312:125::-;;7380:1;7377;7374:8;7371:2;;;7385:18;;:::i;:::-;-1:-1:-1;7422:9:6;;7361:76::o;7442:380::-;7527:1;7517:12;;7574:1;7564:12;;;7585:2;;7639:4;7631:6;7627:17;7617:27;;7585:2;7692;7684:6;7681:14;7661:18;7658:38;7655:2;;;7738:10;7733:3;7729:20;7726:1;7719:31;7773:4;7770:1;7763:15;7801:4;7798:1;7791:15;7655:2;;7497:325;;;:::o;7827:127::-;7888:10;7883:3;7879:20;7876:1;7869:31;7919:4;7916:1;7909:15;7943:4;7940:1;7933:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "746400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22664",
								"balanceOf(address)": "infinite",
								"burnAddress()": "275",
								"decimals()": "285",
								"decreaseAllowance(address,uint256)": "23623",
								"excludeFromFee(address)": "22229",
								"includeInFee(address)": "22222",
								"increaseAllowance(address,uint256)": "23713",
								"name()": "infinite",
								"owner()": "1137",
								"renounceOwnership()": "23552",
								"setTaxFeePercent(uint256)": "21204",
								"symbol()": "infinite",
								"taxFee()": "1139",
								"totalSupply()": "1118",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23812"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 703,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 679,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 679,
									"end": 704,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 963,
									"end": 1218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2AB337AD34B7B6902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "55464F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1069,
									"end": 1124,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1113,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1113,
									"end": 1123,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1113,
									"end": 1123,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1113,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1087,
									"end": 1123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1104,
									"name": "PUSH",
									"source": 0,
									"value": "E8D4A51000"
								},
								{
									"begin": 1087,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1087,
									"end": 1123,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1087,
									"end": 1123,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1087,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1069,
									"end": 1124,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1069,
									"end": 1124,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1069,
									"end": 1124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1203,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1210,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1210,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1173,
									"end": 1210,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1206,
									"end": 1210,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1173,
									"end": 1210,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1210,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3093,
									"end": 3184,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 3093,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3177,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3093,
									"end": 3184,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3093,
									"end": 3184,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8498,
									"end": 8519,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8498,
									"end": 8519,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8566,
									"end": 8615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8599,
									"end": 8606,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8608,
									"end": 8614,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8566,
									"end": 8586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 8566,
									"end": 8615,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8566,
									"end": 8615,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8566,
									"end": 8615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8642,
									"end": 8648,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8638,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8626,
									"end": 8638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8667,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8667,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8718,
									"end": 8719,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8718,
									"end": 8719,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8749,
									"end": 8797,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 8777,
									"end": 8778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8781,
									"end": 8788,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8790,
									"end": 8796,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8749,
									"end": 8768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 8749,
									"end": 8797,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8749,
									"end": 8797,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 8749,
									"end": 8797,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 11795,
									"end": 11916,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 11795,
									"end": 11916,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 11795,
									"end": 11916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 11795,
									"end": 11916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 11795,
									"end": 11916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 11795,
									"end": 11916,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 369,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 369,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 219,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 6,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 289,
									"end": 291,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 360,
									"end": 362,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 345,
									"end": 363,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 188,
									"end": 369,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 374,
									"end": 551,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 374,
									"end": 551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 520,
									"end": 545,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 493,
									"end": 511,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 475,
									"end": 551,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 556,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 556,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 556,
									"end": 684,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 614,
									"end": 616,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 669,
									"end": 678,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 669,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 604,
									"end": 684,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 689,
									"end": 1142,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 689,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 808,
									"end": 813,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1136,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 822,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 871,
									"end": 872,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 908,
									"end": 910,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 898,
									"end": 906,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 895,
									"end": 911,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 885,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 885,
									"end": 887,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 915,
									"end": 920,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 915,
									"end": 920,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 885,
									"end": 887,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 885,
									"end": 887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 956,
									"end": 960,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 947,
									"end": 961,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 941,
									"end": 945,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 938,
									"end": 962,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 935,
									"end": 937,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 935,
									"end": 937,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 965,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 965,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 965,
									"end": 983,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 965,
									"end": 983,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 965,
									"end": 983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1015,
									"end": 1017,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1005,
									"end": 1013,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1018,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1046,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1046,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1046,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1046,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1126,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1126,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1126,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1126,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1126,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1069,
									"end": 1084,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1069,
									"end": 1084,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 822,
									"end": 1136,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1136,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 822,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 766,
									"end": 1142,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1147,
									"end": 1295,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1295,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1275,
									"end": 1279,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1261,
									"end": 1280,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 1259,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1234,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1234,
									"end": 1289,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1234,
									"end": 1289,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1234,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1225,
									"end": 1289,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1295,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1215,
									"end": 1295,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1300,
									"end": 2222,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1300,
									"end": 2222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 2222,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1384,
									"end": 1392,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1374,
									"end": 1376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1425,
									"end": 1426,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1439,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1439,
									"end": 1444,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1376,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1374,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1463,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1463,
									"end": 1465,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1510,
									"end": 1511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1524,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1524,
									"end": 1529,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1463,
									"end": 1465,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1463,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1573,
									"end": 1574,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1568,
									"end": 1627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1627,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1568,
									"end": 1627,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1636,
									"end": 1819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1819,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1636,
									"end": 1819,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1548,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1548,
									"end": 1819,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1568,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1599,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1589,
									"end": 1599,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1599,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1612,
									"end": 1617,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1612,
									"end": 1617,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1612,
									"end": 1617,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1819,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1636,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1673,
									"end": 1676,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1663,
									"end": 1671,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1677,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1698,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1680,
									"end": 1698,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1680,
									"end": 1698,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1680,
									"end": 1698,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1680,
									"end": 1698,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1736,
									"end": 1737,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1726,
									"end": 1734,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1738,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1738,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1764,
									"end": 1767,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1757,
									"end": 1762,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1754,
									"end": 1768,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1789,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1771,
									"end": 1789,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1771,
									"end": 1789,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1771,
									"end": 1789,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1771,
									"end": 1789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1548,
									"end": 1819,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1548,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1548,
									"end": 1819,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1905,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1893,
									"end": 1901,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1890,
									"end": 1906,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1884,
									"end": 1887,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1875,
									"end": 1888,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1907,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1867,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 1855,
									"end": 1863,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1868,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1841,
									"end": 1845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1838,
									"end": 1850,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1869,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1908,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1940,
									"end": 1959,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 1959,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 1959,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 1974,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1972,
									"end": 1974,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2025,
									"end": 2030,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2110,
									"end": 2113,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2108,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2094,
									"end": 2098,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2091,
									"end": 2092,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2072,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2072,
									"end": 2114,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2072,
									"end": 2114,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2072,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2147,
									"end": 2153,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2142,
									"end": 2145,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2138,
									"end": 2154,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2129,
									"end": 2136,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2126,
									"end": 2155,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2125,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2123,
									"end": 2125,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2176,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2158,
									"end": 2176,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2158,
									"end": 2176,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2158,
									"end": 2176,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2158,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2196,
									"end": 2216,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2196,
									"end": 2216,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 2222,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1364,
									"end": 2222,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2227,
									"end": 2395,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2227,
									"end": 2395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2227,
									"end": 2395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2333,
									"end": 2334,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2329,
									"end": 2330,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2331,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2321,
									"end": 2335,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2319,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2315,
									"end": 2336,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2312,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2296,
									"end": 2313,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2337,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2291,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2289,
									"end": 2291,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2340,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2340,
									"end": 2358,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2340,
									"end": 2358,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2340,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2389,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2380,
									"end": 2389,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2279,
									"end": 2395,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2400,
									"end": 2780,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2400,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2485,
									"end": 2486,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2475,
									"end": 2487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2475,
									"end": 2487,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2533,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2522,
									"end": 2534,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2534,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2534,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2601,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2585,
									"end": 2602,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2602,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2602,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2650,
									"end": 2652,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2642,
									"end": 2648,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2639,
									"end": 2653,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2637,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2616,
									"end": 2654,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2696,
									"end": 2706,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2687,
									"end": 2707,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2684,
									"end": 2685,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2708,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2731,
									"end": 2735,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2728,
									"end": 2729,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2721,
									"end": 2736,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2759,
									"end": 2763,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2756,
									"end": 2757,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2764,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2455,
									"end": 2780,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2455,
									"end": 2780,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2455,
									"end": 2780,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2455,
									"end": 2780,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2785,
									"end": 2912,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2785,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2846,
									"end": 2856,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2841,
									"end": 2844,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2837,
									"end": 2857,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2827,
									"end": 2858,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2881,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2874,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2867,
									"end": 2882,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2898,
									"end": 2899,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2891,
									"end": 2906,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2912,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2817,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 3132,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ffdea4ebb53e14c3bbd82d52a443db5be9aa69fb8c9bd838a5e7327cf9c207864736f6c63430008000033",
									".code": [
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "70D5AE05"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "EA2F0B37"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "70D5AE05"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "A071DCF4"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "61C82D0"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 3132,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2007,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2088,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2082,
											"end": 2094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4548,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4579,
											"end": 4584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5353,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5993,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1492,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 571,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "DEAD"
										},
										{
											"begin": 533,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 613,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 679,
											"end": 704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6743,
											"end": 6767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6935,
											"end": 6940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6951,
											"end": 6967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6951,
											"end": 6985,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3872,
											"end": 3877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1779,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10414,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10937,
											"end": 10942,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2390,
											"end": 3129,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2390,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2493,
											"end": 2552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2523,
											"end": 2552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2493,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2665,
											"end": 2707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2665,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2665,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2810,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2781,
											"end": 2822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 571,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "DEAD"
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2933,
											"end": 2980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 2980,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2933,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3060,
											"end": 3110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3060,
											"end": 3110,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3060,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2489,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 3129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 3129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 3129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 3129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7790,
											"end": 7796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 7827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8077,
											"end": 8083,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8095,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8121,
											"end": 8123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8131,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8095,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8095,
											"end": 8132,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 397,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1294,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1409,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1484,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1489,
											"end": 1692,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1489,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1653,
											"end": 1685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1686,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1692,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1697,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1697,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1876,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1877,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1884,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2492,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1889,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2098,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2107,
											"end": 2141,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2300,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2268,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2172,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2337,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2392,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2405,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2486,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2486,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2492,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2492,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2497,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2497,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2702,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2702,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2811,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2772,
											"end": 2774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2896,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3303,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2901,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3303,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3308,
											"end": 3706,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3308,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3551,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3699,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3681,
											"end": 3700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3482,
											"end": 3706,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3711,
											"end": 4064,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3711,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3915,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4022,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3986,
											"end": 3988,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 3989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 3989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 4064,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4069,
											"end": 4471,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4069,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4312,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4383,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 4464,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4471,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4476,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4476,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4680,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4719,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4788,
											"name": "PUSH",
											"source": 6,
											"value": "466565206D757374206265206265747765656E20302520616E64203130250000"
										},
										{
											"begin": 4751,
											"end": 4753,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4823,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4806,
											"end": 4824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4650,
											"end": 4830,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4835,
											"end": 5191,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4835,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5019,
											"end": 5040,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5115,
											"end": 5149,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5184,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5009,
											"end": 5191,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5196,
											"end": 5597,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5196,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5510,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5456,
											"end": 5474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5590,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5572,
											"end": 5591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5597,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5602,
											"end": 6002,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5602,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5786,
											"end": 5807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5845,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5862,
											"end": 5880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5933,
											"end": 5951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5926,
											"end": 5960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 5995,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 6002,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6007,
											"end": 6408,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6007,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6191,
											"end": 6212,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6221,
											"end": 6251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6321,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6355,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6408,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6413,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6413,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6584,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6590,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6595,
											"end": 6779,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6595,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6755,
											"end": 6772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6772,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6725,
											"end": 6727,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6779,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6784,
											"end": 6912,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6784,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6857,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6858,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6842,
											"end": 6844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6912,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6917,
											"end": 7134,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6917,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6973,
											"end": 6975,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 7039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7052,
											"end": 7067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7094,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6975,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6973,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7119,
											"end": 7128,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7119,
											"end": 7128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7134,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7139,
											"end": 7307,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7139,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7243,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7247,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7248,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7249,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7201,
											"end": 7203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7201,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7201,
											"end": 7203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7191,
											"end": 7307,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7312,
											"end": 7437,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 7312,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7312,
											"end": 7437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7382,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7361,
											"end": 7437,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7442,
											"end": 7822,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7442,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7517,
											"end": 7529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7517,
											"end": 7529,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7564,
											"end": 7576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 7576,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 7576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7617,
											"end": 7644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7617,
											"end": 7644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7692,
											"end": 7694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7681,
											"end": 7695,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 7696,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7748,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 7733,
											"end": 7736,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7729,
											"end": 7749,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7778,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7805,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7822,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7827,
											"end": 7954,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7827,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7898,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7879,
											"end": 7899,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7909,
											"end": 7924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7948,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnAddress()": "70d5ae05",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"excludeFromFee(address)": "437823ec",
							"includeInFee(address)": "ea2f0b37",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setTaxFeePercent(uint256)": "061c82d0",
							"symbol()": "95d89b41",
							"taxFee()": "a071dcf4",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setTaxFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"UfoZiom Token is an ERC20 token with a transaction fee for burning.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens and excludes owner from fee.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"excludeFromFee(address)\":{\"details\":\"Exclude an account from transaction fees. Can only be called by the owner.\",\"params\":{\"account\":\"The address to exclude.\"}},\"includeInFee(address)\":{\"details\":\"Include an account in transaction fees. Can only be called by the owner.\",\"params\":{\"account\":\"The address to include.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTaxFeePercent(uint256)\":{\"details\":\"Set the transaction fee percentage. Can only be called by the owner.\",\"params\":{\"fee\":\"The new fee percentage.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"UfoZiom Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"UfoZiomToken.sol\":\"UfoZiomToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UfoZiomToken.sol\":{\"keccak256\":\"0x99a43641025e7819c251bed4e3ebb1ef6bb69069a584c13d054e4be1a2aa833d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08763c2a50008d72f5773ac29c58cbc2a3d4e469ffef8c97d5feaca8d1bcb500\",\"dweb:/ipfs/Qme61qXVW6k3mUkv5kokfVT2P4cRkGkWHPMQ6WBp2LGH5N\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 281,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 287,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 289,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 291,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 293,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 168,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 14,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "taxFee",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 18,
								"contract": "UfoZiomToken.sol:UfoZiomToken",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 168,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:895   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":123:126   */\n  dup3\n    /* \"#utility.yul\":116:120   */\n  0x1f\n    /* \"#utility.yul\":108:114   */\n  dup4\n    /* \"#utility.yul\":104:121   */\n  add\n    /* \"#utility.yul\":100:127   */\n  slt\n    /* \"#utility.yul\":90:92   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":145:150   */\n  dup1\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":131:151   */\n  revert\n    /* \"#utility.yul\":90:92   */\ntag_24:\n    /* \"#utility.yul\":172:185   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":234:244   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":231:233   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":247:265   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":296:298   */\n  0x40\n    /* \"#utility.yul\":290:299   */\n  mload\n    /* \"#utility.yul\":318:322   */\n  0x20\n    /* \"#utility.yul\":388:390   */\n  0x1f\n    /* \"#utility.yul\":369:382   */\n  dup5\n  add\n  not(0x1f)\n    /* \"#utility.yul\":365:392   */\n  and\n    /* \"#utility.yul\":353:393   */\n  dup3\n  add\n    /* \"#utility.yul\":349:398   */\n  dup2\n  add\n    /* \"#utility.yul\":413:431   */\n  dup4\n  dup2\n  gt\n    /* \"#utility.yul\":433:455   */\n  dup4\n  dup3\n  lt\n    /* \"#utility.yul\":410:456   */\n  or\n    /* \"#utility.yul\":407:409   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":459:477   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":495:497   */\n  0x40\n    /* \"#utility.yul\":488:510   */\n  mstore\n    /* \"#utility.yul\":519:537   */\n  dup4\n  dup3\n  mstore\n    /* \"#utility.yul\":556:571   */\n  dup6\n  dup5\n  add\n    /* \"#utility.yul\":552:576   */\n  dup2\n  add\n    /* \"#utility.yul\":549:582   */\n  dup8\n  lt\n    /* \"#utility.yul\":546:548   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":599:604   */\n  dup5\n    /* \"#utility.yul\":592:597   */\n  dup6\n    /* \"#utility.yul\":585:605   */\n  revert\n    /* \"#utility.yul\":546:548   */\ntag_30:\n    /* \"#utility.yul\":625:630   */\n  dup5\n    /* \"#utility.yul\":616:630   */\n  swap3\n  pop\n    /* \"#utility.yul\":639:772   */\ntag_31:\n    /* \"#utility.yul\":653:655   */\n  dup4\n    /* \"#utility.yul\":650:651   */\n  dup4\n    /* \"#utility.yul\":647:656   */\n  lt\n    /* \"#utility.yul\":639:772   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":741:755   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":737:760   */\n  dup2\n  add\n    /* \"#utility.yul\":731:761   */\n  mload\n    /* \"#utility.yul\":710:724   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":706:729   */\n  dup3\n  add\n    /* \"#utility.yul\":699:762   */\n  mstore\n    /* \"#utility.yul\":664:674   */\n  swap2\n  dup3\n  add\n  swap2\n    /* \"#utility.yul\":639:772   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":790:792   */\n  dup4\n    /* \"#utility.yul\":787:788   */\n  dup4\n    /* \"#utility.yul\":784:793   */\n  gt\n    /* \"#utility.yul\":781:783   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":849:854   */\n  dup5\n    /* \"#utility.yul\":844:846   */\n  dup2\n    /* \"#utility.yul\":839:841   */\n  dup6\n    /* \"#utility.yul\":831:837   */\n  dup5\n    /* \"#utility.yul\":827:842   */\n  add\n    /* \"#utility.yul\":823:847   */\n  add\n    /* \"#utility.yul\":816:855   */\n  mstore\n    /* \"#utility.yul\":781:783   */\ntag_34:\n  pop\n    /* \"#utility.yul\":883:889   */\n  swap6\n    /* \"#utility.yul\":80:895   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":900:1496   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":1060:1062   */\n  0x40\n    /* \"#utility.yul\":1048:1057   */\n  dup4\n    /* \"#utility.yul\":1039:1046   */\n  dup6\n    /* \"#utility.yul\":1035:1058   */\n  sub\n    /* \"#utility.yul\":1031:1063   */\n  slt\n    /* \"#utility.yul\":1028:1030   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1081:1087   */\n  dup2\n    /* \"#utility.yul\":1073:1079   */\n  dup3\n    /* \"#utility.yul\":1066:1088   */\n  revert\n    /* \"#utility.yul\":1028:1030   */\ntag_36:\n    /* \"#utility.yul\":1113:1129   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1178:1192   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1175:1177   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1210:1216   */\n  dup4\n    /* \"#utility.yul\":1202:1208   */\n  dup5\n    /* \"#utility.yul\":1195:1217   */\n  revert\n    /* \"#utility.yul\":1175:1177   */\ntag_37:\n    /* \"#utility.yul\":1238:1301   */\n  tag_38\n    /* \"#utility.yul\":1293:1300   */\n  dup7\n    /* \"#utility.yul\":1284:1290   */\n  dup4\n    /* \"#utility.yul\":1273:1282   */\n  dup8\n    /* \"#utility.yul\":1269:1291   */\n  add\n    /* \"#utility.yul\":1238:1301   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1228:1301   */\n  swap4\n  pop\n    /* \"#utility.yul\":1347:1349   */\n  0x20\n    /* \"#utility.yul\":1336:1345   */\n  dup6\n    /* \"#utility.yul\":1332:1350   */\n  add\n    /* \"#utility.yul\":1326:1351   */\n  mload\n    /* \"#utility.yul\":1310:1351   */\n  swap2\n  pop\n    /* \"#utility.yul\":1376:1378   */\n  dup1\n    /* \"#utility.yul\":1366:1374   */\n  dup3\n    /* \"#utility.yul\":1363:1379   */\n  gt\n    /* \"#utility.yul\":1360:1362   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1389:1395   */\n  dup4\n    /* \"#utility.yul\":1382:1404   */\n  revert\n    /* \"#utility.yul\":1360:1362   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1425:1490   */\n  tag_40\n    /* \"#utility.yul\":1482:1489   */\n  dup6\n    /* \"#utility.yul\":1471:1479   */\n  dup3\n    /* \"#utility.yul\":1460:1469   */\n  dup7\n    /* \"#utility.yul\":1456:1480   */\n  add\n    /* \"#utility.yul\":1425:1490   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1415:1490   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1018:1496   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1501:1881   */\ntag_11:\n    /* \"#utility.yul\":1586:1587   */\n  0x02\n    /* \"#utility.yul\":1576:1588   */\n  dup2\n  div\n    /* \"#utility.yul\":1633:1634   */\n  0x01\n    /* \"#utility.yul\":1623:1635   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1644:1646   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1698:1702   */\n  0x7f\n    /* \"#utility.yul\":1690:1696   */\n  dup3\n    /* \"#utility.yul\":1686:1703   */\n  and\n    /* \"#utility.yul\":1676:1703   */\n  swap2\n  pop\n    /* \"#utility.yul\":1644:1646   */\ntag_42:\n    /* \"#utility.yul\":1751:1753   */\n  0x20\n    /* \"#utility.yul\":1743:1749   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  lt\n    /* \"#utility.yul\":1720:1738   */\n  dup2\n    /* \"#utility.yul\":1717:1755   */\n  eq\n    /* \"#utility.yul\":1714:1716   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1797:1807   */\n  0x4e487b71\n    /* \"#utility.yul\":1792:1795   */\n  0xe0\n    /* \"#utility.yul\":1788:1808   */\n  shl\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1809   */\n  mstore\n    /* \"#utility.yul\":1832:1836   */\n  0x22\n    /* \"#utility.yul\":1829:1830   */\n  0x04\n    /* \"#utility.yul\":1822:1837   */\n  mstore\n    /* \"#utility.yul\":1860:1864   */\n  0x24\n    /* \"#utility.yul\":1857:1858   */\n  0x00\n    /* \"#utility.yul\":1850:1865   */\n  revert\n    /* \"#utility.yul\":1714:1716   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1556:1881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1886:2013   */\ntag_27:\n    /* \"#utility.yul\":1947:1957   */\n  0x4e487b71\n    /* \"#utility.yul\":1942:1945   */\n  0xe0\n    /* \"#utility.yul\":1938:1958   */\n  shl\n    /* \"#utility.yul\":1935:1936   */\n  0x00\n    /* \"#utility.yul\":1928:1959   */\n  mstore\n    /* \"#utility.yul\":1978:1982   */\n  0x41\n    /* \"#utility.yul\":1975:1976   */\n  0x04\n    /* \"#utility.yul\":1968:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x24\n    /* \"#utility.yul\":1999:2000   */\n  0x00\n    /* \"#utility.yul\":1992:2007   */\n  revert\n    /* \"#utility.yul\":1918:2013   */\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4532:4545  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4548:4560  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4548:4558  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4548:4560  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4532:4560  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4579:4584  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5335:5350  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5353:5365  _msgSender() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5353:5363  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5353:5365  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5335:5365  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5397:5404  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5977:5990  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5993:6005  _msgSender() */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5993:6003  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5993:6005  _msgSender() */\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6051  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6067  _allowances[owner][spender] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5977:6005  address owner = _msgSender() */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_73\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":5977:6005  address owner = _msgSender() */\n      dup3\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_86\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6070:6080  addedValue */\n      dup8\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_88:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6689:6693  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6705:6718  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6721:6733  _msgSender() */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6721:6731  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6721:6733  _msgSender() */\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      dup1\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6743:6767  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6781  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6770:6797  _allowances[owner][spender] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6705:6733  address owner = _msgSender() */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6815:6850  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6935:6940  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6942:6949  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6970:6985  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6951:6967  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6951:6985  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6926:6934  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3824:3837  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3840:3852  _msgSender() */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3840:3850  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3840:3852  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3824:3852  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3872:3877  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10254:10273  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_109\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10332:10353  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_112\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10414  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10430  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10403:10439  _allowances[owner][spender] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_113\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10433:10439  amount */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      tag_28\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10937:10942  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10944:10951  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10927:10936  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      jump\t// in\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10900:10952  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10966:10982  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_119\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7488:8139  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7614:7632  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7692:7708  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_127\n      jump\t// in\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7759:7797  _beforeTokenTransfer(from, to, amount) */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7780:7784  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7786:7788  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7790:7796  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7759:7779  _beforeTokenTransfer */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7759:7797  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7808:7827  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7863:7884  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_132\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7979:7999  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7999  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8032  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_133\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8073:8075  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8067:8071  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8077:8083  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8095:8132  _afterTokenTransfer(from, to, amount) */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8115:8119  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8121:8123  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":8125:8131  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n    tag_129:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_140:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_144:\n        /* \"#utility.yul\":355:386   */\n      tag_145\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_140\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:671   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_147:\n        /* \"#utility.yul\":575:606   */\n      tag_148\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_140\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_149\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_140\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:1018   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":810:819   */\n      dup5\n        /* \"#utility.yul\":801:808   */\n      dup7\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":843:849   */\n      dup1\n        /* \"#utility.yul\":835:841   */\n      dup2\n        /* \"#utility.yul\":828:850   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_151:\n        /* \"#utility.yul\":871:902   */\n      tag_152\n        /* \"#utility.yul\":892:901   */\n      dup5\n        /* \"#utility.yul\":871:902   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":861:902   */\n      swap3\n      pop\n        /* \"#utility.yul\":921:961   */\n      tag_153\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup6\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":921:961   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":911:961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \"#utility.yul\":980:1012   */\n      calldataload\n        /* \"#utility.yul\":970:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1018   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1023:1289   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1122   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup2\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1120:1122   */\n    tag_155:\n        /* \"#utility.yul\":1201:1232   */\n      tag_156\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1201:1232   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1191:1232   */\n      swap5\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1251:1283   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1110:1289   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1481   */\n    tag_24:\n        /* \"#utility.yul\":1459:1473   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1452:1474   */\n      iszero\n        /* \"#utility.yul\":1434:1475   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1407:1425   */\n      add\n      swap1\n        /* \"#utility.yul\":1389:1481   */\n      jump\t// out\n        /* \"#utility.yul\":1486:2089   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":1627:1629   */\n      0x20\n        /* \"#utility.yul\":1656:1658   */\n      dup1\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1638:1659   */\n      mstore\n        /* \"#utility.yul\":1688:1694   */\n      dup4\n        /* \"#utility.yul\":1682:1695   */\n      mload\n        /* \"#utility.yul\":1731:1737   */\n      dup1\n        /* \"#utility.yul\":1726:1728   */\n      dup3\n        /* \"#utility.yul\":1715:1724   */\n      dup6\n        /* \"#utility.yul\":1711:1729   */\n      add\n        /* \"#utility.yul\":1704:1738   */\n      mstore\n        /* \"#utility.yul\":1756:1760   */\n      dup3\n        /* \"#utility.yul\":1769:1909   */\n    tag_159:\n        /* \"#utility.yul\":1783:1789   */\n      dup2\n        /* \"#utility.yul\":1780:1781   */\n      dup2\n        /* \"#utility.yul\":1777:1790   */\n      lt\n        /* \"#utility.yul\":1769:1909   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1878:1892   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1874:1897   */\n      dup4\n      add\n        /* \"#utility.yul\":1868:1898   */\n      mload\n        /* \"#utility.yul\":1844:1861   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1863:1865   */\n      0x40\n        /* \"#utility.yul\":1840:1866   */\n      add\n        /* \"#utility.yul\":1833:1899   */\n      mstore\n        /* \"#utility.yul\":1798:1808   */\n      dup3\n      add\n        /* \"#utility.yul\":1769:1909   */\n      jump(tag_159)\n    tag_161:\n        /* \"#utility.yul\":1927:1933   */\n      dup2\n        /* \"#utility.yul\":1924:1925   */\n      dup2\n        /* \"#utility.yul\":1921:1934   */\n      gt\n        /* \"#utility.yul\":1918:1920   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1997:2001   */\n      dup4\n        /* \"#utility.yul\":1992:1994   */\n      0x40\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1972:1981   */\n      dup8\n        /* \"#utility.yul\":1968:1990   */\n      add\n        /* \"#utility.yul\":1964:1995   */\n      add\n        /* \"#utility.yul\":1957:2002   */\n      mstore\n        /* \"#utility.yul\":1918:1920   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x1f\n        /* \"#utility.yul\":2052:2067   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2048:2077   */\n      and\n        /* \"#utility.yul\":2033:2078   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2080:2082   */\n      0x40\n        /* \"#utility.yul\":2029:2083   */\n      add\n      swap4\n        /* \"#utility.yul\":1607:2089   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:2493   */\n    tag_127:\n        /* \"#utility.yul\":2296:2298   */\n      0x20\n        /* \"#utility.yul\":2278:2299   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2335:2337   */\n      0x23\n        /* \"#utility.yul\":2315:2333   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2308:2338   */\n      mstore\n        /* \"#utility.yul\":2374:2408   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2369:2371   */\n      0x40\n        /* \"#utility.yul\":2354:2372   */\n      dup3\n      add\n        /* \"#utility.yul\":2347:2409   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2440:2442   */\n      0x60\n        /* \"#utility.yul\":2425:2443   */\n      dup3\n      add\n        /* \"#utility.yul\":2418:2451   */\n      mstore\n        /* \"#utility.yul\":2483:2486   */\n      0x80\n        /* \"#utility.yul\":2468:2487   */\n      add\n      swap1\n        /* \"#utility.yul\":2268:2493   */\n      jump\t// out\n        /* \"#utility.yul\":2498:2896   */\n    tag_112:\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2682:2703   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2739:2741   */\n      0x22\n        /* \"#utility.yul\":2719:2737   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2712:2742   */\n      mstore\n        /* \"#utility.yul\":2778:2812   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2773:2775   */\n      0x40\n        /* \"#utility.yul\":2758:2776   */\n      dup3\n      add\n        /* \"#utility.yul\":2751:2813   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2844:2846   */\n      0x60\n        /* \"#utility.yul\":2829:2847   */\n      dup3\n      add\n        /* \"#utility.yul\":2822:2854   */\n      mstore\n        /* \"#utility.yul\":2886:2889   */\n      0x80\n        /* \"#utility.yul\":2871:2890   */\n      add\n      swap1\n        /* \"#utility.yul\":2672:2896   */\n      jump\t// out\n        /* \"#utility.yul\":2901:3254   */\n    tag_119:\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3085:3106   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3142:3144   */\n      0x1d\n        /* \"#utility.yul\":3122:3140   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3115:3145   */\n      mstore\n        /* \"#utility.yul\":3181:3212   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3176:3178   */\n      0x40\n        /* \"#utility.yul\":3161:3179   */\n      dup3\n      add\n        /* \"#utility.yul\":3154:3213   */\n      mstore\n        /* \"#utility.yul\":3245:3247   */\n      0x60\n        /* \"#utility.yul\":3230:3248   */\n      add\n      swap1\n        /* \"#utility.yul\":3075:3254   */\n      jump\t// out\n        /* \"#utility.yul\":3259:3661   */\n    tag_132:\n        /* \"#utility.yul\":3461:3463   */\n      0x20\n        /* \"#utility.yul\":3443:3464   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3500:3502   */\n      0x26\n        /* \"#utility.yul\":3480:3498   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3473:3503   */\n      mstore\n        /* \"#utility.yul\":3539:3573   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3534:3536   */\n      0x40\n        /* \"#utility.yul\":3519:3537   */\n      dup3\n      add\n        /* \"#utility.yul\":3512:3574   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3605:3607   */\n      0x60\n        /* \"#utility.yul\":3590:3608   */\n      dup3\n      add\n        /* \"#utility.yul\":3583:3619   */\n      mstore\n        /* \"#utility.yul\":3651:3654   */\n      0x80\n        /* \"#utility.yul\":3636:3655   */\n      add\n      swap1\n        /* \"#utility.yul\":3433:3661   */\n      jump\t// out\n        /* \"#utility.yul\":3666:4067   */\n    tag_124:\n        /* \"#utility.yul\":3868:3870   */\n      0x20\n        /* \"#utility.yul\":3850:3871   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3907:3909   */\n      0x25\n        /* \"#utility.yul\":3887:3905   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3880:3910   */\n      mstore\n        /* \"#utility.yul\":3946:3980   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3941:3943   */\n      0x40\n        /* \"#utility.yul\":3926:3944   */\n      dup3\n      add\n        /* \"#utility.yul\":3919:3981   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4012:4014   */\n      0x60\n        /* \"#utility.yul\":3997:4015   */\n      dup3\n      add\n        /* \"#utility.yul\":3990:4025   */\n      mstore\n        /* \"#utility.yul\":4057:4060   */\n      0x80\n        /* \"#utility.yul\":4042:4061   */\n      add\n      swap1\n        /* \"#utility.yul\":3840:4067   */\n      jump\t// out\n        /* \"#utility.yul\":4072:4472   */\n    tag_109:\n        /* \"#utility.yul\":4274:4276   */\n      0x20\n        /* \"#utility.yul\":4256:4277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4313:4315   */\n      0x24\n        /* \"#utility.yul\":4293:4311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4286:4316   */\n      mstore\n        /* \"#utility.yul\":4352:4386   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4347:4349   */\n      0x40\n        /* \"#utility.yul\":4332:4350   */\n      dup3\n      add\n        /* \"#utility.yul\":4325:4387   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4418:4420   */\n      0x60\n        /* \"#utility.yul\":4403:4421   */\n      dup3\n      add\n        /* \"#utility.yul\":4396:4430   */\n      mstore\n        /* \"#utility.yul\":4462:4465   */\n      0x80\n        /* \"#utility.yul\":4447:4466   */\n      add\n      swap1\n        /* \"#utility.yul\":4246:4472   */\n      jump\t// out\n        /* \"#utility.yul\":4477:4878   */\n    tag_99:\n        /* \"#utility.yul\":4679:4681   */\n      0x20\n        /* \"#utility.yul\":4661:4682   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4718:4720   */\n      0x25\n        /* \"#utility.yul\":4698:4716   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4691:4721   */\n      mstore\n        /* \"#utility.yul\":4757:4791   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4752:4754   */\n      0x40\n        /* \"#utility.yul\":4737:4755   */\n      dup3\n      add\n        /* \"#utility.yul\":4730:4792   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4823:4825   */\n      0x60\n        /* \"#utility.yul\":4808:4826   */\n      dup3\n      add\n        /* \"#utility.yul\":4801:4836   */\n      mstore\n        /* \"#utility.yul\":4868:4871   */\n      0x80\n        /* \"#utility.yul\":4853:4872   */\n      add\n      swap1\n        /* \"#utility.yul\":4651:4878   */\n      jump\t// out\n        /* \"#utility.yul\":4883:5060   */\n    tag_28:\n        /* \"#utility.yul\":5029:5054   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5017:5019   */\n      0x20\n        /* \"#utility.yul\":5002:5020   */\n      add\n      swap1\n        /* \"#utility.yul\":4984:5060   */\n      jump\t// out\n        /* \"#utility.yul\":5065:5249   */\n    tag_37:\n        /* \"#utility.yul\":5237:5241   */\n      0xff\n        /* \"#utility.yul\":5225:5242   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5207:5243   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5180:5198   */\n      add\n      swap1\n        /* \"#utility.yul\":5162:5249   */\n      jump\t// out\n        /* \"#utility.yul\":5254:5483   */\n    tag_87:\n      0x00\n        /* \"#utility.yul\":5325:5326   */\n      dup3\n        /* \"#utility.yul\":5321:5327   */\n      not\n        /* \"#utility.yul\":5318:5319   */\n      dup3\n        /* \"#utility.yul\":5315:5328   */\n      gt\n        /* \"#utility.yul\":5312:5314   */\n      iszero\n      tag_173\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5351:5384   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5407:5411   */\n      0x11\n        /* \"#utility.yul\":5404:5405   */\n      0x04\n        /* \"#utility.yul\":5397:5412   */\n      mstore\n        /* \"#utility.yul\":5437:5441   */\n      0x24\n        /* \"#utility.yul\":5358:5361   */\n      dup2\n        /* \"#utility.yul\":5425:5442   */\n      revert\n        /* \"#utility.yul\":5312:5314   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5468:5477   */\n      add\n      swap1\n        /* \"#utility.yul\":5302:5483   */\n      jump\t// out\n        /* \"#utility.yul\":5488:5868   */\n    tag_65:\n        /* \"#utility.yul\":5573:5574   */\n      0x02\n        /* \"#utility.yul\":5563:5575   */\n      dup2\n      div\n        /* \"#utility.yul\":5620:5621   */\n      0x01\n        /* \"#utility.yul\":5610:5622   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5631:5633   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5685:5689   */\n      0x7f\n        /* \"#utility.yul\":5677:5683   */\n      dup3\n        /* \"#utility.yul\":5673:5690   */\n      and\n        /* \"#utility.yul\":5663:5690   */\n      swap2\n      pop\n        /* \"#utility.yul\":5631:5633   */\n    tag_175:\n        /* \"#utility.yul\":5738:5740   */\n      0x20\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5727:5741   */\n      lt\n        /* \"#utility.yul\":5707:5725   */\n      dup2\n        /* \"#utility.yul\":5704:5742   */\n      eq\n        /* \"#utility.yul\":5701:5703   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5784:5794   */\n      0x4e487b71\n        /* \"#utility.yul\":5779:5782   */\n      0xe0\n        /* \"#utility.yul\":5775:5795   */\n      shl\n        /* \"#utility.yul\":5772:5773   */\n      0x00\n        /* \"#utility.yul\":5765:5796   */\n      mstore\n        /* \"#utility.yul\":5819:5823   */\n      0x22\n        /* \"#utility.yul\":5816:5817   */\n      0x04\n        /* \"#utility.yul\":5809:5824   */\n      mstore\n        /* \"#utility.yul\":5847:5851   */\n      0x24\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5837:5852   */\n      revert\n        /* \"#utility.yul\":5701:5703   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5543:5868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d9889c7d3d6c74aff31bef98a5bda5f2f209b895eafd75edc83a50874c46f3464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2015:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:815:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:24:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "138:5:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "145:5:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:20:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:20:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "108:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "116:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "104:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "104:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "123:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "93:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:35:6"
															},
															"nodeType": "YulIf",
															"src": "90:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "162:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "172:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "166:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "194:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "212:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "216:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "208:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "220:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "198:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "245:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "247:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "247:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "247:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "237:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "241:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "234:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:10:6"
															},
															"nodeType": "YulIf",
															"src": "231:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "276:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "296:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "290:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "280:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "308:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "318:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "312:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:67:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "373:2:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "377:4:6",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "369:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "369:13:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "384:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "384:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:27:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:40:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "395:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:49:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "335:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "459:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "459:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "459:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "416:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "428:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "413:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "436:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "448:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "433:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "410:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:46:6"
															},
															"nodeType": "YulIf",
															"src": "407:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "499:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "534:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "519:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "583:24:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "592:5:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "599:5:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "585:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:20:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:20:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "560:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "568:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "556:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "556:15:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "573:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "578:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "549:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:33:6"
															},
															"nodeType": "YulIf",
															"src": "546:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "616:14:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "625:5:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "620:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "685:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "714:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "722:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "710:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "710:14:6"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "726:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "706:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "706:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "745:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "753:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "741:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "741:14:6"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "757:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "737:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "737:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "731:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "731:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "650:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "653:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "647:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "657:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "659:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "668:1:6"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "671:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "664:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "659:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "643:3:6",
																"statements": []
															},
															"src": "639:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "831:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "839:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "827:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "827:15:6"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "844:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "823:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "823:24:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "849:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "787:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "790:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "784:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:9:6"
															},
															"nodeType": "YulIf",
															"src": "781:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "874:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "883:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "874:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "54:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "62:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "70:5:6",
														"type": ""
													}
												],
												"src": "14:881:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:478:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1064:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1073:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1081:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1039:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1035:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:32:6"
															},
															"nodeType": "YulIf",
															"src": "1028:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1099:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1119:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1113:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1103:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1138:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1160:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1142:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1193:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1202:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1210:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1195:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1189:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1178:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:14:6"
															},
															"nodeType": "YulIf",
															"src": "1175:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1228:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1293:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1238:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:63:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1314:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1389:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1397:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1376:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:16:6"
															},
															"nodeType": "YulIf",
															"src": "1360:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1471:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1482:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1425:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:65:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "976:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "987:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "999:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1007:6:6",
														"type": ""
													}
												],
												"src": "900:596:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1556:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1566:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1580:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1597:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1627:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1601:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1676:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1690:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1698:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1686:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1686:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1654:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:26:6"
															},
															"nodeType": "YulIf",
															"src": "1644:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1764:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1785:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1792:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1797:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1788:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1788:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1778:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1778:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1829:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1832:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1822:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1822:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1822:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1740:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:38:6"
															},
															"nodeType": "YulIf",
															"src": "1714:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1536:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1545:6:6",
														"type": ""
													}
												],
												"src": "1501:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1942:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1938:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1938:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1928:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1978:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1968:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1886:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000bf638038062000bf68339810160408190526200003491620001b9565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61097380620002836000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106a4565b60405180910390f35b6100df6100da366004610670565b610222565b6040516100c39190610699565b6100f4610244565b6040516100c391906108c7565b6100df61010f366004610635565b61024a565b61011c610278565b6040516100c391906108d0565b6100df610137366004610670565b61027d565b6100f461014a3660046105e2565b6102c9565b6100b66102e8565b6100df610165366004610670565b6102f7565b6100df610178366004610670565b610361565b6100f461018b366004610603565b610379565b60606003805461019f90610902565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610902565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b60008061022d6103a4565b905061023a8185856103a8565b5060019392505050565b60025490565b6000806102556103a4565b905061026285828561045c565b61026d8585856104a6565b506001949350505050565b601290565b6000806102886103a4565b6001600160a01b0380821660009081526001602090815260408083209389168352929052205490915061023a90829086906102c49087906108de565b6103a8565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f90610902565b6000806103026103a4565b6001600160a01b03808216600090815260016020908152604080832093891683529290522054909150838110156103545760405162461bcd60e51b815260040161034b90610882565b60405180910390fd5b61026d82868684036103a8565b60008061036c6103a4565b905061023a8185856104a6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103ce5760405162461bcd60e51b815260040161034b9061083e565b6001600160a01b0382166103f45760405162461bcd60e51b815260040161034b9061073a565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061044f9085906108c7565b60405180910390a3505050565b60006104688484610379565b905060001981146104a057818110156104935760405162461bcd60e51b815260040161034b9061077c565b6104a084848484036103a8565b50505050565b6001600160a01b0383166104cc5760405162461bcd60e51b815260040161034b906107f9565b6001600160a01b0382166104f25760405162461bcd60e51b815260040161034b906106f7565b6104fd8383836105c6565b6001600160a01b038316600090815260208190526040902054818110156105365760405162461bcd60e51b815260040161034b906107b3565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061056d9084906108de565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105b791906108c7565b60405180910390a36104a08484845b505050565b80356001600160a01b03811681146102e357600080fd5b6000602082840312156105f3578081fd5b6105fc826105cb565b9392505050565b60008060408385031215610615578081fd5b61061e836105cb565b915061062c602084016105cb565b90509250929050565b600080600060608486031215610649578081fd5b610652846105cb565b9250610660602085016105cb565b9150604084013590509250925092565b60008060408385031215610682578182fd5b61068b836105cb565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156106d0578581018301518582016040015282016106b4565b818111156106e15783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156108fd57634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061091657607f821691505b6020821081141561093757634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203d9889c7d3d6c74aff31bef98a5bda5f2f209b895eafd75edc83a50874c46f3464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBF6 CODESIZE SUB DUP1 PUSH3 0xBF6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x273 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x220 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x164 JUMPI PUSH3 0x164 PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x17B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x19E JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x17F JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x1AF JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1CC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1E3 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F1 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x216 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x973 DUP1 PUSH3 0x283 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH2 0x11C PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x902 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x902 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x3A8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x255 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x262 DUP6 DUP3 DUP6 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x26D DUP6 DUP6 DUP6 PUSH2 0x4A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x288 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x23A SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2C4 SWAP1 DUP8 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x302 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x36C PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x44F SWAP1 DUP6 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP5 DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4A0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x4A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x4FD DUP4 DUP4 DUP4 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x56D SWAP1 DUP5 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4A0 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5FC DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x615 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x61E DUP4 PUSH2 0x5CB JUMP JUMPDEST SWAP2 POP PUSH2 0x62C PUSH1 0x20 DUP5 ADD PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x649 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x652 DUP5 PUSH2 0x5CB JUMP JUMPDEST SWAP3 POP PUSH2 0x660 PUSH1 0x20 DUP6 ADD PUSH2 0x5CB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x682 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x68B DUP4 PUSH2 0x5CB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E1 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x916 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x937 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP9 DUP10 0xC7 0xD3 0xD6 0xC7 0x4A SELFDESTRUCT BALANCE 0xBE 0xF9 DUP11 JUMPDEST 0xDA 0x5F 0x2F KECCAK256 SWAP12 DUP10 0x5E 0xAF 0xD7 0x5E 0xDC DUP4 0xA5 ADDMOD PUSH21 0xC46F3464736F6C6343000800003300000000000000 ",
							"sourceMap": "1403:11223:2:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:2;;;-1:-1:-1;1403:11223:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:6;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:6;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:6;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:6;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:6;80:815;-1:-1:-1;;;;;80:815:6:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:6;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:380::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1797:10;1792:3;1788:20;1785:1;1778:31;1832:4;1829:1;1822:15;1860:4;1857:1;1850:15;1714:2;;1556:325;;;:::o;1886:127::-;1947:10;1942:3;1938:20;1935:1;1928:31;1978:4;1975:1;1968:15;2002:4;1999:1;1992:15;1918:95;1403:11223:2;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5870:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:6"
															},
															"nodeType": "YulIf",
															"src": "113:2:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:6"
															},
															"nodeType": "YulIf",
															"src": "274:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:6",
														"type": ""
													}
												],
												"src": "194:198:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:187:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:6"
															},
															"nodeType": "YulIf",
															"src": "494:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "397:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:238:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "843:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:6"
															},
															"nodeType": "YulIf",
															"src": "790:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "871:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "970:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "769:6:6",
														"type": ""
													}
												],
												"src": "676:342:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:179:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:6"
															},
															"nodeType": "YulIf",
															"src": "1120:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1201:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1251:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:6",
														"type": ""
													}
												],
												"src": "1023:266:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1411:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1466:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1459:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1434:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1369:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1380:4:6",
														"type": ""
													}
												],
												"src": "1294:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:482:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1617:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1627:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1621:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1656:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1668:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1682:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1672:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1715:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1726:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1731:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:13:6",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1756:4:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1751:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1819:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1848:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1859:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1844:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1844:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1863:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1840:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1840:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1882:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1890:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1878:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1878:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1894:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1874:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1874:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1868:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1868:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1833:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1833:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1833:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1780:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1777:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1791:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1793:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1802:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1805:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1798:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1798:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1793:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1773:3:6",
																"statements": []
															},
															"src": "1769:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1943:69:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1972:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1983:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1968:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1968:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1992:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1964:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1964:31:6"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1997:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1957:45:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:45:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1924:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1927:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1921:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:13:6"
															},
															"nodeType": "YulIf",
															"src": "1918:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2021:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2056:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2064:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2052:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2052:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2073:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2048:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2048:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2033:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2029:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1576:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1587:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1598:4:6",
														"type": ""
													}
												],
												"src": "1486:603:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2268:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2285:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2278:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2358:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2369:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2354:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2354:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2374:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2347:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2347:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2347:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2445:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2460:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2472:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2460:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2245:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2259:4:6",
														"type": ""
													}
												],
												"src": "2094:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2849:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2649:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2663:4:6",
														"type": ""
													}
												],
												"src": "2498:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3075:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3137:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3115:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3165:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3176:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3181:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3222:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3234:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3245:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3222:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3052:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3066:4:6",
														"type": ""
													}
												],
												"src": "2901:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3433:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3450:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3443:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3484:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3495:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3480:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3473:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3534:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3519:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3519:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3539:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3594:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3605:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3610:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3628:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3640:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3651:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3636:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3628:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3410:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3424:4:6",
														"type": ""
													}
												],
												"src": "3259:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3857:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3868:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3891:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3902:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3887:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3941:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3926:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3926:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3946:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4001:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4012:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3997:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3997:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4017:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3990:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4034:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4034:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3817:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3831:4:6",
														"type": ""
													}
												],
												"src": "3666:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4246:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4263:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4297:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4308:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4293:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4293:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4286:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4352:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4325:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4423:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4439:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4451:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4462:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4439:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4223:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4237:4:6",
														"type": ""
													}
												],
												"src": "4072:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4651:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4668:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4679:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4661:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4661:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4702:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4713:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4691:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4691:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4741:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4752:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4737:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4737:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4757:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4730:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4730:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4812:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4823:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4828:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4845:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4857:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4868:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4853:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4845:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4628:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4642:4:6",
														"type": ""
													}
												],
												"src": "4477:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4984:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4994:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5006:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5017:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4994:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5047:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5029:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4953:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4964:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4975:4:6",
														"type": ""
													}
												],
												"src": "4883:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5172:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5184:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5172:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5214:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5229:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5237:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5131:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:6",
														"type": ""
													}
												],
												"src": "5065:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:181:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5337:115:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5358:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5367:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5372:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5363:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5363:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5351:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5351:33:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5351:33:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5404:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5407:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5397:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5397:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5397:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5432:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5437:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5425:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5425:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:17:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5318:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5325:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5315:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:13:6"
															},
															"nodeType": "YulIf",
															"src": "5312:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5461:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5472:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5475:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5285:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5288:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5294:3:6",
														"type": ""
													}
												],
												"src": "5254:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5543:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5553:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5567:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5584:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5614:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5588:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5661:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5663:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5677:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5685:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5673:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5673:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5663:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5641:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:26:6"
															},
															"nodeType": "YulIf",
															"src": "5631:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5751:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5772:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5779:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5784:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5775:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5775:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5765:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5765:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5765:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5816:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5819:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5809:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5809:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5809:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5844:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5847:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5837:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5837:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5837:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5707:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5730:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5738:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5727:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5727:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5704:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:38:6"
															},
															"nodeType": "YulIf",
															"src": "5701:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5523:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5532:6:6",
														"type": ""
													}
												],
												"src": "5488:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106a4565b60405180910390f35b6100df6100da366004610670565b610222565b6040516100c39190610699565b6100f4610244565b6040516100c391906108c7565b6100df61010f366004610635565b61024a565b61011c610278565b6040516100c391906108d0565b6100df610137366004610670565b61027d565b6100f461014a3660046105e2565b6102c9565b6100b66102e8565b6100df610165366004610670565b6102f7565b6100df610178366004610670565b610361565b6100f461018b366004610603565b610379565b60606003805461019f90610902565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610902565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b60008061022d6103a4565b905061023a8185856103a8565b5060019392505050565b60025490565b6000806102556103a4565b905061026285828561045c565b61026d8585856104a6565b506001949350505050565b601290565b6000806102886103a4565b6001600160a01b0380821660009081526001602090815260408083209389168352929052205490915061023a90829086906102c49087906108de565b6103a8565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f90610902565b6000806103026103a4565b6001600160a01b03808216600090815260016020908152604080832093891683529290522054909150838110156103545760405162461bcd60e51b815260040161034b90610882565b60405180910390fd5b61026d82868684036103a8565b60008061036c6103a4565b905061023a8185856104a6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103ce5760405162461bcd60e51b815260040161034b9061083e565b6001600160a01b0382166103f45760405162461bcd60e51b815260040161034b9061073a565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061044f9085906108c7565b60405180910390a3505050565b60006104688484610379565b905060001981146104a057818110156104935760405162461bcd60e51b815260040161034b9061077c565b6104a084848484036103a8565b50505050565b6001600160a01b0383166104cc5760405162461bcd60e51b815260040161034b906107f9565b6001600160a01b0382166104f25760405162461bcd60e51b815260040161034b906106f7565b6104fd8383836105c6565b6001600160a01b038316600090815260208190526040902054818110156105365760405162461bcd60e51b815260040161034b906107b3565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061056d9084906108de565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105b791906108c7565b60405180910390a36104a08484845b505050565b80356001600160a01b03811681146102e357600080fd5b6000602082840312156105f3578081fd5b6105fc826105cb565b9392505050565b60008060408385031215610615578081fd5b61061e836105cb565b915061062c602084016105cb565b90509250929050565b600080600060608486031215610649578081fd5b610652846105cb565b9250610660602085016105cb565b9150604084013590509250925092565b60008060408385031215610682578182fd5b61068b836105cb565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156106d0578581018301518582016040015282016106b4565b818111156106e15783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156108fd57634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061091657607f821691505b6020821081141561093757634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203d9889c7d3d6c74aff31bef98a5bda5f2f209b895eafd75edc83a50874c46f3464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH2 0x11C PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x902 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x902 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x3A8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x255 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x262 DUP6 DUP3 DUP6 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x26D DUP6 DUP6 DUP6 PUSH2 0x4A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x288 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x23A SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2C4 SWAP1 DUP8 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x302 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x36C PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x44F SWAP1 DUP6 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP5 DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4A0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x4A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x4FD DUP4 DUP4 DUP4 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x56D SWAP1 DUP5 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4A0 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5FC DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x615 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x61E DUP4 PUSH2 0x5CB JUMP JUMPDEST SWAP2 POP PUSH2 0x62C PUSH1 0x20 DUP5 ADD PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x649 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x652 DUP5 PUSH2 0x5CB JUMP JUMPDEST SWAP3 POP PUSH2 0x660 PUSH1 0x20 DUP6 ADD PUSH2 0x5CB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x682 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x68B DUP4 PUSH2 0x5CB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E1 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x916 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x937 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP9 DUP10 0xC7 0xD3 0xD6 0xC7 0x4A SELFDESTRUCT BALANCE 0xBE 0xF9 DUP11 JUMPDEST 0xDA 0x5F 0x2F KECCAK256 SWAP12 DUP10 0x5E 0xAF 0xD7 0x5E 0xDC DUP4 0xA5 ADDMOD PUSH21 0xC46F3464736F6C6343000800003300000000000000 ",
							"sourceMap": "1403:11223:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3244:106::-;;;:::i;:::-;;;;;;;:::i;5192:286::-;;;;;;:::i;:::-;;:::i;3093:91::-;;;:::i;:::-;;;;;;;:::i;5873:236::-;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;;:::i;2367:102::-;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:2;;4433:197;-1:-1:-1;;;4433:197:2:o;3244:106::-;3331:12;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;3093:91::-;3175:2;3093:91;:::o;5873:236::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;-1:-1:-1;;;;;6040:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;5977:28;;-1:-1:-1;6015:66:2;;5977:28;;6031:7;;6040:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;3408:125::-;-1:-1:-1;;;;;3508:18:2;;3482:7;3508:18;;;;;;;;;;;3408:125;;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;6689:4;6705:13;6721:12;:10;:12::i;:::-;-1:-1:-1;;;;;6770:18:2;;;6743:24;6770:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;6705:28;;-1:-1:-1;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;;;;;;:::i;:::-;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;640:96:5:-;719:10;640:96;:::o;10123:370:2:-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10454:32;;;;;10433:6;;10454:32;:::i;:::-;;;;;;;;10123:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:2;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;;;;;;:::i;:::-;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;;;;;;:::i;:::-;7759:38;7780:4;7786:2;7790:6;7759:20;:38::i;:::-;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;7961:15:2;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;;;:::i;:::-;;;;;;;;8095:37;8115:4;8121:2;8125:6;11795:121;;;;:::o;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:6:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:6:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:6;2052:15;-1:-1:-1;;2048:29:6;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:6:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:6;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:398::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:34;2773:2;2758:18;;2751:62;-1:-1:-1;;;2844:2:6;2829:18;;2822:32;2886:3;2871:19;;2672:224::o;2901:353::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:31;3176:2;3161:18;;3154:59;3245:2;3230:18;;3075:179::o;3259:402::-;3461:2;3443:21;;;3500:2;3480:18;;;3473:30;3539:34;3534:2;3519:18;;3512:62;-1:-1:-1;;;3605:2:6;3590:18;;3583:36;3651:3;3636:19;;3433:228::o;3666:401::-;3868:2;3850:21;;;3907:2;3887:18;;;3880:30;3946:34;3941:2;3926:18;;3919:62;-1:-1:-1;;;4012:2:6;3997:18;;3990:35;4057:3;4042:19;;3840:227::o;4072:400::-;4274:2;4256:21;;;4313:2;4293:18;;;4286:30;4352:34;4347:2;4332:18;;4325:62;-1:-1:-1;;;4418:2:6;4403:18;;4396:34;4462:3;4447:19;;4246:226::o;4477:401::-;4679:2;4661:21;;;4718:2;4698:18;;;4691:30;4757:34;4752:2;4737:18;;4730:62;-1:-1:-1;;;4823:2:6;4808:18;;4801:35;4868:3;4853:19;;4651:227::o;4883:177::-;5029:25;;;5017:2;5002:18;;4984:76::o;5065:184::-;5237:4;5225:17;;;;5207:36;;5195:2;5180:18;;5162:87::o;5254:229::-;;5325:1;5321:6;5318:1;5315:13;5312:2;;;-1:-1:-1;;;5351:33:6;;5407:4;5404:1;5397:15;5437:4;5358:3;5425:17;5312:2;-1:-1:-1;5468:9:6;;5302:181::o;5488:380::-;5573:1;5563:12;;5620:1;5610:12;;;5631:2;;5685:4;5677:6;5673:17;5663:27;;5631:2;5738;5730:6;5727:14;5707:18;5704:38;5701:2;;;5784:10;5779:3;5775:20;5772:1;5765:31;5819:4;5816:1;5809:15;5847:4;5844:1;5837:15;5701:2;;5543:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "483800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22619",
								"balanceOf(address)": "infinite",
								"decimals()": "329",
								"decreaseAllowance(address,uint256)": "23667",
								"increaseAllowance(address,uint256)": "23646",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1073",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 126,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 120,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 104,
									"end": 121,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 100,
									"end": 127,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 90,
									"end": 92,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 145,
									"end": 150,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 131,
									"end": 151,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 90,
									"end": 92,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 172,
									"end": 185,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 172,
									"end": 185,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 234,
									"end": 244,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 231,
									"end": 233,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 231,
									"end": 233,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 233,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 296,
									"end": 298,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 299,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 318,
									"end": 322,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 369,
									"end": 382,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 369,
									"end": 382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 365,
									"end": 392,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 353,
									"end": 393,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 353,
									"end": 393,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 349,
									"end": 398,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 349,
									"end": 398,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 413,
									"end": 431,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 455,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 410,
									"end": 456,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 407,
									"end": 409,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 407,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 407,
									"end": 409,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 510,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 519,
									"end": 537,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 556,
									"end": 571,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 552,
									"end": 576,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 552,
									"end": 576,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 549,
									"end": 582,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 599,
									"end": 604,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 592,
									"end": 597,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 585,
									"end": 605,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 546,
									"end": 548,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 625,
									"end": 630,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 616,
									"end": 630,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 616,
									"end": 630,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 653,
									"end": 655,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 650,
									"end": 651,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 647,
									"end": 656,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 741,
									"end": 755,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 737,
									"end": 760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 737,
									"end": 760,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 761,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 710,
									"end": 724,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 706,
									"end": 729,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 706,
									"end": 729,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 699,
									"end": 762,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 790,
									"end": 792,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 787,
									"end": 788,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 784,
									"end": 793,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 783,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 849,
									"end": 854,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 844,
									"end": 846,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 839,
									"end": 841,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 831,
									"end": 837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 827,
									"end": 842,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 823,
									"end": 847,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 816,
									"end": 855,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 781,
									"end": 783,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 80,
									"end": 895,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 80,
									"end": 895,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1057,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1046,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1035,
									"end": 1058,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1031,
									"end": 1063,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1087,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1073,
									"end": 1079,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1088,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1208,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1217,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1291,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1349,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1336,
									"end": 1345,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1351,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1378,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 1489,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1479,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1469,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1456,
									"end": 1480,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1587,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1634,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1698,
									"end": 1702,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1690,
									"end": 1696,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1743,
									"end": 1749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1755,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1807,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1792,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1788,
									"end": 1808,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1809,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1832,
									"end": 1836,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1829,
									"end": 1830,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1822,
									"end": 1837,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1865,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1947,
									"end": 1957,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1942,
									"end": 1945,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1938,
									"end": 1958,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1935,
									"end": 1936,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1928,
									"end": 1959,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1982,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1968,
									"end": 1983,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d9889c7d3d6c74aff31bef98a5bda5f2f209b895eafd75edc83a50874c46f3464736f6c63430008000033",
									".code": [
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4548,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4579,
											"end": 4584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5353,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5993,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6743,
											"end": 6767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6935,
											"end": 6940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6951,
											"end": 6967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6951,
											"end": 6985,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3872,
											"end": 3877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10414,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10937,
											"end": 10942,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7790,
											"end": 7796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7759,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 7827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8077,
											"end": 8083,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8095,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8121,
											"end": 8123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8131,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 397,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1294,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1475,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1481,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1695,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1790,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2083,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 2089,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 2089,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2094,
											"end": 2493,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2094,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2408,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2486,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2493,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2498,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2498,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2896,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3254,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2901,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3212,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3247,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3254,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3259,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3259,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3443,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3636,
											"end": 3655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3661,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3666,
											"end": 4067,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3666,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4042,
											"end": 4061,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 4067,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4072,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4072,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4256,
											"end": 4277,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4462,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4447,
											"end": 4466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4472,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4477,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4752,
											"end": 4754,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4878,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4883,
											"end": 5060,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4883,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5060,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5065,
											"end": 5249,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5065,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5241,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5249,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5254,
											"end": 5483,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5254,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5328,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5404,
											"end": 5405,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5358,
											"end": 5361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5442,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5483,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5488,
											"end": 5868,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5488,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5741,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 5742,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5794,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5779,
											"end": 5782,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5775,
											"end": 5795,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5809,
											"end": 5824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5852,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 281,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 287,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 289,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 291,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 293,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"UfoZiomToken.sol": {
				"ast": {
					"absolutePath": "UfoZiomToken.sol",
					"exportedSymbols": {
						"Context": [
							978
						],
						"ERC20": [
							853
						],
						"IERC20": [
							931
						],
						"IERC20Metadata": [
							956
						],
						"Ownable": [
							265
						],
						"UfoZiomToken": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 854,
							"src": "94:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 266,
							"src": "204:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 853,
										"src": "452:5:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "452:5:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "459:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "459:7:0"
								}
							],
							"contractDependencies": [
								265,
								853,
								931,
								956,
								978
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "315:110:0",
								"text": " @title UfoZiom Token\n @dev UfoZiom Token is an ERC20 token with a transaction fee for burning."
							},
							"fullyImplemented": true,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								265,
								853,
								956,
								931,
								978
							],
							"name": "UfoZiomToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "70d5ae05",
									"id": 11,
									"mutability": "constant",
									"name": "burnAddress",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "533:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "571:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a071dcf4",
									"id": 14,
									"mutability": "mutable",
									"name": "taxFee",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "679:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "679:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "703:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "786:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "786:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 16,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "805:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1007:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 27,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1075:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1075:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f3030305f3030305f303030",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1087:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1_000_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1107:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 31,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1113:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1113:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1107:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1087:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 26,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1069:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1069:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "1069:55:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 37,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1173:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 40,
														"indexExpression": {
															"expression": {
																"id": 38,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1192:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1192:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1173:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1206:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1173:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1173:37:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "846:111:0",
										"text": " @dev Constructor that gives msg.sender all of existing tokens and excludes owner from fee."
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "55666f5a696f6d20546f6b656e",
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "983:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_de5d9983c2ca992871ff92993be91c6448a6b2f65090d4e0bdc0085594b2867e",
														"typeString": "literal_string \"UfoZiom Token\""
													},
													"value": "UfoZiom Token"
												},
												{
													"hexValue": "55464f",
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1000:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2590983cc070056e4ebe771107fd1d84cad75371b05a748b4ad5e12fb7ae8675",
														"typeString": "literal_string \"UFO\""
													},
													"value": "UFO"
												}
											],
											"id": 24,
											"modifierName": {
												"id": 21,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 853,
												"src": "977:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "977:29:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:0"
									},
									"scope": 160,
									"src": "963:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1447:53:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 53,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1458:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 55,
														"indexExpression": {
															"id": 54,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1458:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1488:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1458:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1458:34:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1226:155:0",
										"text": " @dev Exclude an account from transaction fees.\n Can only be called by the owner.\n @param account The address to exclude."
									},
									"functionSelector": "437823ec",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 51,
											"modifierName": {
												"id": 50,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "1437:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1437:9:0"
										}
									],
									"name": "excludeFromFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:17:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:0:0"
									},
									"scope": 160,
									"src": "1387:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1725:54:0",
										"statements": [
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 68,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1736:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 70,
														"indexExpression": {
															"id": 69,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1736:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1766:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1736:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1736:35:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1508:153:0",
										"text": " @dev Include an account in transaction fees.\n Can only be called by the owner.\n @param account The address to include."
									},
									"functionSelector": "ea2f0b37",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "1715:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1715:9:0"
										}
									],
									"name": "includeInFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1689:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1688:17:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:0:0"
									},
									"scope": 160,
									"src": "1667:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1996:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 84,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "2015:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2022:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2015:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 87,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "2027:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2034:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2027:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2015:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466565206d757374206265206265747765656e20302520616e6420313025",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2038:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c9e7b56c818d48799f7d06e4b345bdd04b5b22360436c0e00b40825c2d7f3df",
																"typeString": "literal_string \"Fee must be between 0% and 10%\""
															},
															"value": "Fee must be between 0% and 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c9e7b56c818d48799f7d06e4b345bdd04b5b22360436c0e00b40825c2d7f3df",
																"typeString": "literal_string \"Fee must be between 0% and 10%\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "2007:64:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2082:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 95,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2091:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2082:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2082:12:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1787:145:0",
										"text": " @dev Set the transaction fee percentage.\n Can only be called by the owner.\n @param fee The new fee percentage."
									},
									"functionSelector": "061c82d0",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 81,
											"modifierName": {
												"id": 80,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "1986:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1986:9:0"
										}
									],
									"name": "setTaxFeePercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1964:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:13:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:0:0"
									},
									"scope": 160,
									"src": "1938:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										614
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2478:651:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 110,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2493:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 112,
														"indexExpression": {
															"id": 111,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2512:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2493:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 113,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 115,
														"indexExpression": {
															"id": 114,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2542:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2523:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2493:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 156,
													"nodeType": "Block",
													"src": "2725:397:0",
													"statements": [
														{
															"assignments": [
																127
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 127,
																	"mutability": "mutable",
																	"name": "feeAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 156,
																	"src": "2781:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 126,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 133,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 128,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2801:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 129,
																		"name": "taxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "2810:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2801:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2819:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2801:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2781:41:0"
														},
														{
															"assignments": [
																135
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 135,
																	"mutability": "mutable",
																	"name": "amountAfterFee",
																	"nodeType": "VariableDeclaration",
																	"scope": 156,
																	"src": "2837:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 134,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2837:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 139,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 136,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "2862:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 137,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "2871:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2862:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2837:43:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "2949:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "burnAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "2957:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 145,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "2970:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 140,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_UfoZiomToken_$160_$",
																			"typeString": "type(contract super UfoZiomToken)"
																		}
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 614,
																	"src": "2933:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2933:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 147,
															"nodeType": "ExpressionStatement",
															"src": "2933:47:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 151,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "3076:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 152,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "3084:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 153,
																		"name": "amountAfterFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3095:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 148,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3060:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_UfoZiomToken_$160_$",
																			"typeString": "type(contract super UfoZiomToken)"
																		}
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 614,
																	"src": "3060:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3060:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "3060:50:0"
														}
													]
												},
												"id": 157,
												"nodeType": "IfStatement",
												"src": "2489:633:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "2554:165:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 120,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "2681:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 121,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "2689:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 122,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2700:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 117,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2665:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_UfoZiomToken_$160_$",
																			"typeString": "type(contract super UfoZiomToken)"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 614,
																	"src": "2665:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2665:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "2665:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2110:274:0",
										"text": " @dev Overrides the default ERC20 _transfer function to implement transaction fee.\n @param sender The address transferring tokens.\n @param recipient The address receiving tokens.\n @param amount The amount of tokens being transferred."
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 108,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2469:8:0"
									},
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2425:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:51:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:0"
									},
									"scope": 160,
									"src": "2390:739:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 161,
							"src": "427:2705:0"
						}
					],
					"src": "33:3101:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							978
						],
						"Ownable": [
							265
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 163,
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 979,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 165,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 978,
										"src": "668:7:1"
									},
									"id": 166,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"contractDependencies": [
								978
							],
							"contractKind": "contract",
							"documentation": {
								"id": 164,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265,
								978
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 168,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 174,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 179,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 178,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 184,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 265,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 265,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 199,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 205,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 207,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 211,
											"modifierName": {
												"id": 210,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 265,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 230,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 239,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 227,
											"modifierName": {
												"id": 226,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 265,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 250,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"id": 252,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 255,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 259,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 258,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 265,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 266,
							"src": "639:1820:1"
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							978
						],
						"ERC20": [
							853
						],
						"IERC20": [
							931
						],
						"IERC20Metadata": [
							956
						]
					},
					"id": 854,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 268,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 932,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 269,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 957,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 270,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 979,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 272,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 978,
										"src": "1421:7:2"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:2"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 931,
										"src": "1430:6:2"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:2"
								},
								{
									"baseName": {
										"id": 276,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 956,
										"src": "1438:14:2"
									},
									"id": 277,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:2"
								}
							],
							"contractDependencies": [
								931,
								956,
								978
							],
							"contractKind": "contract",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 853,
							"linearizedBaseContracts": [
								853,
								956,
								931,
								978
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1459:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 280,
										"keyType": {
											"id": 278,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 279,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1511:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 286,
										"keyType": {
											"id": 282,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 285,
											"keyType": {
												"id": 283,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 284,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1585:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1620:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 293,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1646:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 292,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2034:57:2",
										"statements": [
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "2044:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 302,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2052:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:2"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2067:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2077:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 310,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1990:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2011:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:2"
									},
									"scope": 853,
									"src": "1978:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										943
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2225:29:2",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "2242:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 316,
												"id": 318,
												"nodeType": "Return",
												"src": "2235:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 313,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:2"
									},
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2210:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:2"
									},
									"scope": 853,
									"src": "2156:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										949
									],
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2438:31:2",
										"statements": [
											{
												"expression": {
													"id": 327,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "2455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 326,
												"id": 328,
												"nodeType": "Return",
												"src": "2448:14:2"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 323,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:2"
									},
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2423:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:2"
									},
									"scope": 853,
									"src": "2367:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3158:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 336,
												"id": 338,
												"nodeType": "Return",
												"src": "3168:9:2"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:2"
									},
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:2"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3151:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 334,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:2"
									},
									"scope": 853,
									"src": "3093:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "3314:36:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "3331:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 346,
												"id": 348,
												"nodeType": "Return",
												"src": "3324:19:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:2"
									},
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "3305:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:2"
									},
									"scope": 853,
									"src": "3244:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										870
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3491:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 359,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "3508:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 361,
													"indexExpression": {
														"id": 360,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3518:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 358,
												"id": 362,
												"nodeType": "Return",
												"src": "3501:25:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:2"
									},
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3427:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:2"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3482:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:2"
									},
									"scope": 853,
									"src": "3408:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										880
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3814:104:2",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 388,
														"src": "3824:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 375,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "3840:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3872:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3879:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3883:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 380,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "3862:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 374,
												"id": 387,
												"nodeType": "Return",
												"src": "3900:11:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 371,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:2"
									},
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3747:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3759:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3808:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:2"
									},
									"scope": 853,
									"src": "3729:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4074:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4091:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4103:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "4110:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4084:34:2"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:2"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3995:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4010:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4065:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:2"
									},
									"scope": 853,
									"src": "3976:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										900
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "4522:108:2",
										"statements": [
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "4532:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 420,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4548:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4579:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4586:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4595:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 423,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "4570:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 417,
												"id": 430,
												"nodeType": "Return",
												"src": "4612:11:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 414,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:2"
									},
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4467:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:2"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4516:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:2"
									},
									"scope": 853,
									"src": "4433:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "5325:153:2",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "5335:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 445,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 447,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "5353:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5391:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5397:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5406:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 450,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "5375:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5433:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5439:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5443:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "5423:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 444,
												"id": 463,
												"nodeType": "Return",
												"src": "5460:11:2"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:2"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5223:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5245:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5265:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:2"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5319:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:2"
									},
									"scope": 853,
									"src": "5192:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "5967:142:2",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 494,
														"src": "5977:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 475,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "5993:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6024:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "6031:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "6040:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "6052:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6040:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6059:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6040:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 488,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "6070:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "6015:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "6015:66:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6098:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 474,
												"id": 493,
												"nodeType": "Return",
												"src": "6091:11:2"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5900:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5917:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5961:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:2"
									},
									"scope": 853,
									"src": "5873:236:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "6695:330:2",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 536,
														"src": "6705:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6705:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "6721:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6705:28:2"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 536,
														"src": "6743:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6743:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 512,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "6770:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 514,
														"indexExpression": {
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "6782:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6770:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 516,
													"indexExpression": {
														"id": 515,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "6789:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6770:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6743:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "6815:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 520,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "6835:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6815:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6852:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6807:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "6807:85:2"
											},
											{
												"id": 533,
												"nodeType": "UncheckedBlock",
												"src": "6902:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 526,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "6935:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 527,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "6942:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 528,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "6951:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 529,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "6970:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6951:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 525,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "6926:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6926:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "6926:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 504,
												"id": 535,
												"nodeType": "Return",
												"src": "7007:11:2"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "6115:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "6623:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "6640:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6622:42:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "6689:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6689:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6688:6:2"
									},
									"scope": 853,
									"src": "6596:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "7596:543:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 548,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "7614:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7630:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7622:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 549,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7622:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7622:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7614:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7634:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7606:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7606:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "7606:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 558,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "7692:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7706:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7698:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 559,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7698:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7698:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7692:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7710:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7684:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "7684:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "7780:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "7786:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7790:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "7759:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7759:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "7759:38:2"
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "7808:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7808:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"baseExpression": {
														"id": 575,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "7830:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 577,
													"indexExpression": {
														"id": 576,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "7840:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7830:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7808:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 580,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "7863:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 581,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "7878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7863:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7886:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7855:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "7855:72:2"
											},
											{
												"id": 594,
												"nodeType": "UncheckedBlock",
												"src": "7937:73:2",
												"statements": [
													{
														"expression": {
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 586,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "7961:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 588,
																"indexExpression": {
																	"id": 587,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "7971:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7961:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 589,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7979:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 590,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "7993:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7979:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7961:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 593,
														"nodeType": "ExpressionStatement",
														"src": "7961:38:2"
													}
												]
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 595,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "8019:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 597,
														"indexExpression": {
															"id": 596,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8029:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8019:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 598,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "8036:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8019:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "8019:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 602,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8067:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8073:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "8077:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "8058:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8058:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "EmitStatement",
												"src": "8053:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8115:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8121:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "8125:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "8095:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8095:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "8095:37:2"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "7031:452:2",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "7516:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7516:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "7538:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "7558:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7506:72:2"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7596:0:2"
									},
									"scope": 853,
									"src": "7488:651:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "8480:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "8498:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8517:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8509:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 624,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8509:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8509:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8498:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8521:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8490:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8490:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "8490:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8595:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8587:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8587:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8587:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8599:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "8608:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "8566:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8566:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "8566:49:2"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 641,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "8626:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 642,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "8642:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8626:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "8626:22:2"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 645,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "8658:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 647,
														"indexExpression": {
															"id": 646,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8658:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 648,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "8680:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8658:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "8658:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8718:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8710:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 652,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8710:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8710:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "8731:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "8701:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8701:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "EmitStatement",
												"src": "8696:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8777:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8769:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8769:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8769:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "8790:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "8749:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8749:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "8749:48:2"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "8145:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "8430:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8430:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "8447:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8429:33:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8480:0:2"
									},
									"scope": 853,
									"src": "8415:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "9189:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 679,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "9207:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9226:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9218:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9218:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9218:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9207:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9230:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9199:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "9199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "9298:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9315:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9307:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 690,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9307:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9307:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9319:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "9277:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9277:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "9277:49:2"
											},
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "9337:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"baseExpression": {
														"id": 699,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "9362:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 701,
													"indexExpression": {
														"id": 700,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "9372:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9362:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9337:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 704,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "9398:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "9416:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9398:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9424:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9390:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9390:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "9390:71:2"
											},
											{
												"id": 718,
												"nodeType": "UncheckedBlock",
												"src": "9471:79:2",
												"statements": [
													{
														"expression": {
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 710,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "9495:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 712,
																"indexExpression": {
																	"id": 711,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "9505:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9495:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 713,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "9516:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 714,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "9533:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9516:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9495:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 717,
														"nodeType": "ExpressionStatement",
														"src": "9495:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 719,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "9559:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 720,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "9575:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9559:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "9559:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 724,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "9606:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9623:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9615:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9627:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "9597:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9597:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "EmitStatement",
												"src": "9592:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 733,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "9665:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9682:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9674:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9674:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9674:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9686:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 732,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "9645:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9645:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "9645:48:2"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "8810:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "9139:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "9156:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9156:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:33:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9189:0:2"
									},
									"scope": 853,
									"src": "9124:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "10236:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 753,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "10254:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10271:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10263:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 754,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10263:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10263:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10254:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10275:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10246:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "10246:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 763,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "10332:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10351:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10343:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 764,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10343:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10343:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10332:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10355:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10324:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10324:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "10324:68:2"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 772,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "10403:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 775,
															"indexExpression": {
																"id": 773,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "10415:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10403:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 776,
														"indexExpression": {
															"id": 774,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "10422:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10403:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 777,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "10433:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10403:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "10403:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "10463:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "10470:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "10479:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "10454:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10454:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "EmitStatement",
												"src": "10449:37:2"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "9706:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "10150:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "10173:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "10198:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10140:78:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10236:0:2"
									},
									"scope": 853,
									"src": "10123:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "10890:321:2",
										"statements": [
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "10900:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [
														{
															"id": 800,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "10937:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "10944:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 799,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "10927:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "10966:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10991:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10991:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 805,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10986:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10986:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10986:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "10962:243:2",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "11005:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 812,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "11027:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 813,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "11047:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11027:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11055:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 811,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11019:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11019:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 817,
															"nodeType": "ExpressionStatement",
															"src": "11019:68:2"
														},
														{
															"id": 826,
															"nodeType": "UncheckedBlock",
															"src": "11101:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 819,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 790,
																				"src": "11138:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 820,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "11145:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 821,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "11154:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 822,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "11173:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11154:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 818,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "11129:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11129:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 825,
																	"nodeType": "ExpressionStatement",
																	"src": "11129:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "10499:266:2",
										"text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "10804:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "10827:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "10852:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:78:2"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10890:0:2"
									},
									"scope": 853,
									"src": "10770:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "11914:2:2",
										"statements": []
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "11217:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "11834:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "11856:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "11876:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11914:0:2"
									},
									"scope": 853,
									"src": "11795:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "12622:2:2",
										"statements": []
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "11922:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "12542:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "12564:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "12584:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12532:72:2"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:2"
									},
									"scope": 853,
									"src": "12504:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 854,
							"src": "1403:11223:2"
						}
					],
					"src": "105:12522:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							931
						]
					},
					"id": 932,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 855,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 856,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 931,
							"linearizedBaseContracts": [
								931
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "342:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:3"
									},
									"scope": 931,
									"src": "296:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:3"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "493:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:3"
									},
									"scope": 931,
									"src": "434:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "733:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "745:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:3"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "779:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:3"
									},
									"scope": 931,
									"src": "715:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1079:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1094:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:3"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1134:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:3"
									},
									"scope": 931,
									"src": "1060:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1813:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1830:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:3"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1864:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:3"
									},
									"scope": 931,
									"src": "1796:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2199:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2241:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:3"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2280:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:3"
									},
									"scope": 931,
									"src": "2168:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 921,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "2470:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "2492:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "2512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:3"
									},
									"src": "2455:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 930,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2701:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2724:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2749:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:3"
									},
									"src": "2686:78:3"
								}
							],
							"scope": 932,
							"src": "202:2564:3"
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							931
						],
						"IERC20Metadata": [
							956
						]
					},
					"id": 957,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 933,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 934,
							"nodeType": "ImportDirective",
							"scope": 957,
							"sourceUnit": 932,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 936,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 931,
										"src": "305:6:4"
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"contractDependencies": [
								931
							],
							"contractKind": "interface",
							"documentation": {
								"id": 935,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 956,
							"linearizedBaseContracts": [
								956,
								931
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 940,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 956,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 956,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 952,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 956,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 957,
							"src": "277:405:4"
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							978
						]
					},
					"id": 979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 958,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 959,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 978,
							"linearizedBaseContracts": [
								978
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 964,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 963,
												"id": 966,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 978,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 973,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 972,
												"id": 975,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 970,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 978,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 979,
							"src": "608:235:5"
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			}
		}
	}
}